class y {
  constructor() {
    this.listeners = {};
  }
  addListener(e, t) {
    return this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t), () => this.removeListener(e, t);
  }
  removeListener(e, t) {
    this.listeners[e] && (this.listeners[e] = this.listeners[e].filter((l) => l !== t));
  }
  dispatch(e, t) {
    this.listeners[e] && this.listeners[e].forEach((l) => l(t));
  }
}
class T {
  constructor(e) {
    this.prefix = "", this.events = new y(), this.data = {}, this.prefix = e;
  }
  get(e, t) {
    if (!(t != null && t.skipStore)) {
      const l = localStorage.getItem(`${this.prefix}${e}`);
      if (l !== null) return JSON.parse(l);
    }
    if (this.data.hasOwnProperty(e))
      return this.data[e];
  }
  set(e, t, l = !1, r) {
    if (l) {
      let a = null;
      r != null && r.skipStore ? a = null : a = localStorage.getItem(`${this.prefix}${e}`), a !== null ? this.data[e] = JSON.parse(a) : this.data.hasOwnProperty(e) || (this.data[e] = t);
    } else
      this.data[e] = t;
    r != null && r.skipStore || localStorage.setItem(
      `${this.prefix}${e}`,
      JSON.stringify(this.data[e])
    ), this.events.dispatch(e, this.data[e]);
  }
  update(e, t, l) {
    const r = this.get(e, l);
    if (r === void 0)
      throw new Error(`"${e}" not found, use \`set\``);
    this.set(e, t(r), !1, l);
  }
  listen(e, t, l = !1, r) {
    if (l) {
      const a = this.get(e, r);
      a !== void 0 && setTimeout(() => t(a));
    }
    return this.events.addListener(e, t);
  }
}
class x {
  constructor() {
    this.data = {}, this._lang = "";
  }
  get lang() {
    return this._lang;
  }
  use(e, t) {
    return new Promise((l, r) => {
      fetch(t).then((a) => a.json()).then((a) => {
        this._lang = e, this.data = a, l(this);
      }).catch((a) => r(a));
    });
  }
  get(...e) {
    const t = e.join(":");
    return this.data[t] || t;
  }
}
const b = {
  onDragStart: null,
  onDragging: null,
  onDragEnd: null
};
function L(n, e, t) {
  t = { ...b, ...t };
  const l = [...n.children].indexOf(e);
  return e.draggable = !0, e.ondragstart = (r) => {
    r.dataTransfer && (r.dataTransfer.effectAllowed = "move", r.dataTransfer.dropEffect = "move"), n.classList.add("ui-dragging"), t.onDragStart && t.onDragStart(l);
  }, e.ondragover = (r) => (r.preventDefault(), !1), e.ondragenter = (r) => {
    r.preventDefault(), [...n.children].forEach((a, o) => {
      if (o === l) {
        a.style.background = "var(--ui-primary)", a.style.color = "var(--ui-primary-text)";
        return;
      }
      a.style.background = "inherit", a.style.color = "inherit";
    }), t.onDragging && t.onDragging(l);
  }, e.ondrop = (r) => {
    r.preventDefault(), r.dataTransfer && (r.dataTransfer.dropEffect = "move"), n.classList.remove("ui-dragging"), t.onDragEnd && t.onDragEnd(l), [...n.children].forEach((a) => {
      a.style.background = "inherit", a.style.color = "inherit";
    });
  }, () => {
    e.draggable = !1, e.ondragstart = null, e.ondragover = null, e.ondragenter = null, e.ondrop = null;
  };
}
const S = {
  onDragStart: null,
  onDragEnd: null
};
function w(n, e) {
  e = { ...S, ...e };
  let t = null, l = null, r = null, a = !1, o = "", i = "";
  const v = (s) => {
    const c = s.currentTarget;
    !t && Array.from(c.classList).includes("draggable") && (l = (/* @__PURE__ */ new Date()).getTime(), t = c, r && clearTimeout(r), r = setTimeout(() => {
      t && (o = t.style.color, i = t.style.backgroundColor, t.style.color = "var(--ui-primary-text)", t.style.backgroundColor = "var(--ui-primary)", n.classList.add("ui-dragging"), a = !0, e != null && e.onDragStart && e.onDragStart());
    }, 200));
  }, p = (s) => {
    if (!l || !t) return;
    if (!a && (/* @__PURE__ */ new Date()).getTime() - l < 200) {
      f();
      return;
    }
    s.preventDefault(), a || (a = !0, e != null && e.onDragStart && e.onDragStart());
    let c;
    if (s instanceof TouchEvent) {
      const g = s.targetTouches[0];
      c = {
        clientX: g.clientX,
        clientY: g.clientY
      };
    } else
      c = {
        clientX: s.clientX,
        clientY: s.clientY
      };
    let u = document.elementFromPoint(c.clientX, c.clientY);
    if (u) {
      for (; !u.classList.contains("draggable") && u.parentElement; )
        u = u.parentElement;
      u.classList.contains("draggable") && ((() => {
        let d = t == null ? void 0 : t.previousElementSibling;
        for (; d; ) {
          if (d === u)
            return !0;
          d = d.previousElementSibling;
        }
        return !1;
      })() ? n.insertBefore(t, u) : n.insertBefore(t, u.nextElementSibling));
    }
  }, f = () => {
    r !== null && (clearTimeout(r), r = null), t && (t.style.color = o, t.style.backgroundColor = i, t = null), l = null, n.classList.remove("ui-dragging"), a && (a = !1, e != null && e.onDragEnd && e.onDragEnd());
  };
  return [...n.children].forEach((s) => {
    s.classList.add("draggable"), s.onmousedown = v, s.ontouchstart = v, s.onmousemove = p, s.ontouchmove = p, n.onmouseleave = s.onmouseup = f, s.ontouchend = f;
  }), () => {
    [...n.children].forEach((s) => {
      s.classList.remove("draggable"), s.onmousedown = null, s.ontouchstart = null, s.onmousemove = null, s.ontouchmove = null, n.onmouseleave = s.onmouseup = null, s.ontouchend = null;
    });
  };
}
const O = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createMobile: w,
  createNative: L
}, Symbol.toStringTag, { value: "Module" })), E = {
  color: "var(--ui-ripple-color, currentColor)",
  opacity: "var(--ui-ripple-opacity, 0.2)",
  centered: !1,
  spreadDuration: ".4s",
  spreadTiming: "linear",
  clearDuration: "1s",
  clearTiming: "ease-in-out",
  usePointer: !1
};
function D(n, e) {
  e = { ...E, ...e || {} };
  let t = null;
  const l = (i) => {
    t = h(i, e), n.addEventListener("pointermove", a);
  }, r = () => {
    n.removeEventListener("pointermove", a), m(t), t = null;
  }, a = () => r(), o = (i) => {
    t = h(i, e), m(t), t = null;
  };
  return n.classList.add("ripple-container"), n.style.overflow = "hidden", e.usePointer ? (n.addEventListener("pointerdown", l), n.addEventListener("pointerup", r), n.addEventListener("pointerleave", r)) : n.addEventListener("click", o), () => {
    if (n.classList.remove("ripple-container"), e.usePointer) {
      n.removeEventListener("pointerdown", l), n.removeEventListener("pointerup", r), n.removeEventListener("pointerleave", r), n.removeEventListener("pointermove", a);
      return;
    }
    n.removeEventListener("click", o);
  };
}
function h(n, e) {
  const t = document.createElement("div"), l = n.currentTarget;
  l.appendChild(t), t.classList.add("ripple"), t.style.position = "absolute", t.style.color = "inherit", t.style.borderRadius = "50%", t.style.pointerEvents = "none", t.style.width = "100px", t.style.height = "100px", t.style.marginTop = "-50px", t.style.marginLeft = "-50px", t.style.opacity = `${e.opacity}`, t.style.backgroundColor = `${e.color}`, t.style.transform = "scale(0) translate(0, 0)", t.style.transition = `transform ${e.spreadDuration} ${e.spreadTiming} 0s,opacity ${e.clearDuration} ${e.clearTiming} 0s`;
  const r = l.getBoundingClientRect();
  e.centered ? (t.style.top = `${r.height / 2}px`, t.style.left = `${r.width / 2}px`) : (t.style.top = `${n.clientY - r.top}px`, t.style.left = `${n.clientX - r.left}px`);
  const a = Math.max(r.width, r.height) * 0.02;
  return t.style.transform = `scale(${a}) translate(0, 0)`, t;
}
function m(n) {
  n && (n.addEventListener("transitionend", (e) => {
    e.propertyName === "opacity" && n.remove();
  }), n.style.opacity = "0");
}
const _ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  create: D,
  defaultOptions: E,
  start: h,
  stop: m
}, Symbol.toStringTag, { value: "Module" }));
function $(n, e) {
  function t(l) {
    fetch(l.template).then((r) => r.text()).then((r) => {
      const a = document.querySelector("head > title");
      a !== null && (a.innerHTML = l.title), n.innerHTML = r, l.scripts.forEach((o) => {
        const i = document.createElement("script");
        i.setAttribute("data-template", l.template), i.src = o.src, n.appendChild(i);
      });
    }).catch((r) => alert(r));
  }
  window.addEventListener("hashchange", () => {
    const l = window.location.hash.replace("#", ""), r = Object.keys(e).find((a) => l.startsWith(a));
    if (r === void 0) {
      const a = e["/"];
      if (a === void 0) {
        console.warn(
          `Window location “${l}” is missing in routes, and the fallback route “/“ is also missing.`
        );
        return;
      }
      t(a);
      return;
    }
    t(e[r]);
  }), window.dispatchEvent(new Event("hashchange"));
}
const P = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hash: $
}, Symbol.toStringTag, { value: "Module" }));
function C() {
  return /(android)/i.test(navigator.userAgent);
}
function j(n) {
  return Object.entries(n).map(([e, t]) => `${e.replace(/[A-Z]/g, (l) => `-${l.toLowerCase()}`)}:${t}`).join(";") + ";";
}
export {
  y as Events,
  x as LanguageHandler,
  T as Store,
  O as draggable,
  C as isAndroid,
  _ as ripple,
  P as router,
  j as styles
};
