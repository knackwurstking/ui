class E {
  constructor() {
    this.listeners = {};
  }
  addListener(e, t) {
    return this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t), () => this.removeListener(e, t);
  }
  removeListener(e, t) {
    this.listeners[e] && (this.listeners[e] = this.listeners[e].filter((n) => n !== t));
  }
  dispatch(e, t) {
    this.listeners[e] && this.listeners[e].forEach((n) => n(t));
  }
}
class $ {
  constructor(e) {
    this.prefix = "", this.events = new E(), this.data = {}, this.prefix = e;
  }
  get(e, t) {
    if (!(t != null && t.skipStore)) {
      const n = localStorage.getItem(`${this.prefix}${e}`);
      if (n !== null) return JSON.parse(n);
    }
    if (this.data.hasOwnProperty(e))
      return this.data[e];
  }
  set(e, t, n = !1, r) {
    if (n) {
      let l = null;
      r != null && r.skipStore ? l = null : l = localStorage.getItem(`${this.prefix}${e}`), l !== null ? this.data[e] = JSON.parse(l) : this.data.hasOwnProperty(e) || (this.data[e] = t);
    } else
      this.data[e] = t;
    r != null && r.skipStore || localStorage.setItem(
      `${this.prefix}${e}`,
      JSON.stringify(this.data[e])
    ), this.events.dispatch(e, this.data[e]);
  }
  update(e, t, n) {
    const r = this.get(e, n);
    if (r === void 0)
      throw new Error(`"${e}" not found, use \`set\``);
    this.set(e, t(r), !1, n);
  }
  listen(e, t, n = !1, r) {
    if (n) {
      const l = this.get(e, r);
      l !== void 0 && setTimeout(() => t(l));
    }
    return this.events.addListener(e, t);
  }
}
class x {
  constructor() {
    this.data = {}, this._lang = "";
  }
  get lang() {
    return this._lang;
  }
  use(e, t) {
    return new Promise((n, r) => {
      fetch(t).then((l) => l.json()).then((l) => {
        this._lang = e, this.data = l, n(this);
      }).catch((l) => r(l));
    });
  }
  get(...e) {
    const t = e.join(":");
    return this.data[t] || t;
  }
}
const L = {
  onDragStart: null,
  onDragging: null,
  onDragEnd: null
};
function b(a, e, t) {
  t = { ...L, ...t };
  const n = [...a.children].indexOf(e);
  return e.draggable = !0, e.ondragstart = (r) => {
    r.dataTransfer && (r.dataTransfer.effectAllowed = "move", r.dataTransfer.dropEffect = "move"), a.classList.add("ui-dragging"), t.onDragStart && t.onDragStart(n);
  }, e.ondragover = (r) => (r.preventDefault(), !1), e.ondragenter = (r) => {
    r.preventDefault(), [...a.children].forEach((l, o) => {
      if (o === n) {
        l.style.background = "var(--ui-primary)", l.style.color = "var(--ui-primary-text)";
        return;
      }
      l.style.background = "inherit", l.style.color = "inherit";
    }), t.onDragging && t.onDragging(n);
  }, e.ondrop = (r) => {
    r.preventDefault(), r.dataTransfer && (r.dataTransfer.dropEffect = "move"), a.classList.remove("ui-dragging"), t.onDragEnd && t.onDragEnd(n), [...a.children].forEach((l) => {
      l.style.background = "inherit", l.style.color = "inherit";
    });
  }, () => {
    e.draggable = !1, e.ondragstart = null, e.ondragover = null, e.ondragenter = null, e.ondrop = null;
  };
}
const S = {
  onDragStart: null,
  onDragEnd: null
};
function w(a, e) {
  e = { ...S, ...e };
  let t = null, n = null, r = null, l = !1, o = "", s = "";
  const u = (i) => {
    const h = i.currentTarget;
    !t && Array.from(h.classList).includes("draggable") && (n = (/* @__PURE__ */ new Date()).getTime(), t = h, r && clearTimeout(r), r = setTimeout(() => {
      t && (o = t.style.color, s = t.style.backgroundColor, t.style.color = "var(--ui-primary-text)", t.style.backgroundColor = "var(--ui-primary)", a.classList.add("ui-dragging"), l = !0, e != null && e.onDragStart && e.onDragStart());
    }, 200));
  }, d = (i) => {
    if (!n || !t) return;
    if (!l && (/* @__PURE__ */ new Date()).getTime() - n < 200) {
      f();
      return;
    }
    i.preventDefault(), l || (l = !0, e != null && e.onDragStart && e.onDragStart());
    let h;
    if (i instanceof TouchEvent) {
      const m = i.targetTouches[0];
      h = {
        clientX: m.clientX,
        clientY: m.clientY
      };
    } else
      h = {
        clientX: i.clientX,
        clientY: i.clientY
      };
    let c = document.elementFromPoint(h.clientX, h.clientY);
    if (c) {
      for (; !c.classList.contains("draggable") && c.parentElement; )
        c = c.parentElement;
      c.classList.contains("draggable") && ((() => {
        let g = t == null ? void 0 : t.previousElementSibling;
        for (; g; ) {
          if (g === c)
            return !0;
          g = g.previousElementSibling;
        }
        return !1;
      })() ? a.insertBefore(t, c) : a.insertBefore(t, c.nextElementSibling));
    }
  }, f = () => {
    r !== null && (clearTimeout(r), r = null), t && (t.style.color = o, t.style.backgroundColor = s, t = null), n = null, a.classList.remove("ui-dragging"), l && (l = !1, e != null && e.onDragEnd && e.onDragEnd());
  };
  return [...a.children].forEach((i) => {
    i.classList.add("draggable"), i.onmousedown = u, i.ontouchstart = u, i.onmousemove = d, i.ontouchmove = d, a.onmouseleave = i.onmouseup = f, i.ontouchend = f;
  }), () => {
    [...a.children].forEach((i) => {
      i.classList.remove("draggable"), i.onmousedown = null, i.ontouchstart = null, i.onmousemove = null, i.ontouchmove = null, a.onmouseleave = i.onmouseup = null, i.ontouchend = null;
    });
  };
}
const M = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createMobile: w,
  createNative: b
}, Symbol.toStringTag, { value: "Module" })), y = {
  color: "var(--ui-ripple-color, currentColor)",
  opacity: "var(--ui-ripple-opacity, 0.2)",
  centered: !1,
  spreadDuration: ".4s",
  spreadTiming: "linear",
  clearDuration: "1s",
  clearTiming: "ease-in-out",
  usePointer: !1
};
function D(a, e) {
  e = { ...y, ...e || {} };
  let t = null;
  const n = (s) => {
    t = p(s, e), a.addEventListener("pointermove", l);
  }, r = () => {
    a.removeEventListener("pointermove", l), v(t), t = null;
  }, l = () => r(), o = (s) => {
    t = p(s, e), v(t), t = null;
  };
  return a.classList.add("ripple-container"), a.style.overflow = "hidden", e.usePointer ? (a.addEventListener("pointerdown", n), a.addEventListener("pointerup", r), a.addEventListener("pointerleave", r)) : a.addEventListener("click", o), () => {
    if (a.classList.remove("ripple-container"), e.usePointer) {
      a.removeEventListener("pointerdown", n), a.removeEventListener("pointerup", r), a.removeEventListener("pointerleave", r), a.removeEventListener("pointermove", l);
      return;
    }
    a.removeEventListener("click", o);
  };
}
function p(a, e) {
  const t = document.createElement("div"), n = a.currentTarget;
  n.appendChild(t), t.classList.add("ripple"), t.style.position = "absolute", t.style.color = "inherit", t.style.borderRadius = "50%", t.style.pointerEvents = "none", t.style.width = "100px", t.style.height = "100px", t.style.marginTop = "-50px", t.style.marginLeft = "-50px", t.style.opacity = `${e.opacity}`, t.style.backgroundColor = `${e.color}`, t.style.transform = "scale(0) translate(0, 0)", t.style.transition = `transform ${e.spreadDuration} ${e.spreadTiming} 0s,opacity ${e.clearDuration} ${e.clearTiming} 0s`;
  const r = n.getBoundingClientRect();
  e.centered ? (t.style.top = `${r.height / 2}px`, t.style.left = `${r.width / 2}px`) : (t.style.top = `${a.clientY - r.top}px`, t.style.left = `${a.clientX - r.left}px`);
  const l = Math.max(r.width, r.height) * 0.02;
  return t.style.transform = `scale(${l}) translate(0, 0)`, t;
}
function v(a) {
  a && (a.addEventListener("transitionend", (e) => {
    e.propertyName === "opacity" && a.remove();
  }), a.style.opacity = "0");
}
const O = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  create: D,
  defaultOptions: y,
  start: p,
  stop: v
}, Symbol.toStringTag, { value: "Module" }));
function T(a, e) {
  let t = !1, n = null;
  async function r(l) {
    var o, s;
    if (location.hash.match(/.*\?+/)) {
      const [u, d] = location.hash.split("?", 2), f = location.origin + location.pathname + `?${d}` + u;
      history.pushState({ path: f, modified: !0 }, "", f), t = !0;
    } else
      t = !1;
    if (n !== null && (((o = n.template) == null ? void 0 : o.onDestroy) !== void 0 && n.template.onDestroy(), n.onDestroy !== void 0 && n.onDestroy()), n = l, n.title !== void 0) {
      const u = document.querySelector("head > title");
      u !== null && (u.innerHTML = n.title);
    }
    if ((n == null ? void 0 : n.href) !== void 0) {
      const d = await (await fetch(n.href)).text();
      a.innerHTML = d, n.scripts !== void 0 && n.scripts.forEach((f) => {
        const i = document.createElement("script");
        i.setAttribute("data-template", n.href), i.src = f.src, a.appendChild(i);
      });
    }
    if ((n == null ? void 0 : n.onMount) !== void 0 && n.onMount(), (n == null ? void 0 : n.template) !== void 0) {
      let u = a;
      n.template.target !== void 0 && (u = document.querySelector(n.template.target));
      const d = document.querySelector(n.template.selector);
      if (d === null)
        throw `${n.template.selector} not found`;
      d instanceof HTMLTemplateElement ? (u.innerHTML = "", u.appendChild(d.content.cloneNode(!0))) : u.innerHTML = d.innerHTML, ((s = n.template) == null ? void 0 : s.onMount) !== void 0 && n.template.onMount();
    }
  }
  window.addEventListener("popstate", () => {
    t && (history.back(), t = !1);
  }), window.addEventListener("hashchange", () => {
    const l = window.location.hash.replace("#", "");
    let o = "";
    for (const s of Object.keys(e))
      l.startsWith(s) && s > o && (o = s);
    if (!o) {
      const s = e["/"];
      if (s === void 0) {
        console.warn(
          `Window location “${l}” is missing in routes, and the fallback route “/“ is also missing.`
        );
        return;
      }
      r(s);
      return;
    }
    r(e[o]);
  }), window.dispatchEvent(new Event("hashchange"));
}
const _ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hash: T
}, Symbol.toStringTag, { value: "Module" }));
function C() {
  return /(android)/i.test(navigator.userAgent);
}
function P(a) {
  return Object.entries(a).map(([e, t]) => `${e.replace(/[A-Z]/g, (n) => `-${n.toLowerCase()}`)}:${t}`).join(";") + ";";
}
export {
  E as Events,
  x as LanguageHandler,
  $ as Store,
  M as draggable,
  C as isAndroid,
  O as ripple,
  _ as router,
  P as styles
};
