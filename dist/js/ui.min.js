let m = null;
function h() {
  return m === null && (m = Array.from(document.styleSheets).map((r) => {
    const t = new CSSStyleSheet(), e = Array.from(r.cssRules).map((o) => o.cssText).join(" ");
    return t.replaceSync(e), t;
  })), m;
}
function $(r) {
  r.adoptedStyleSheets.push(...h());
}
const S = {
  onDragStart: null,
  onDragging: null,
  onDragEnd: null
};
function D(r, t, e) {
  e = { ...S, ...e };
  const o = [...r.children].indexOf(t);
  return t.draggable = !0, t.ondragstart = (n) => {
    n.dataTransfer && (n.dataTransfer.effectAllowed = "move", n.dataTransfer.dropEffect = "move"), r.classList.add("ui-dragging"), e.onDragStart && e.onDragStart(o);
  }, t.ondragover = (n) => (n.preventDefault(), !1), t.ondragenter = (n) => {
    n.preventDefault(), [...r.children].forEach((a, i) => {
      if (i === o) {
        a.style.background = "var(--ui-primary)", a.style.color = "var(--ui-primary-text)";
        return;
      }
      a.style.background = "inherit", a.style.color = "inherit";
    }), e.onDragging && e.onDragging(o);
  }, t.ondrop = (n) => {
    n.preventDefault(), n.dataTransfer && (n.dataTransfer.dropEffect = "move"), r.classList.remove("ui-dragging"), e.onDragEnd && e.onDragEnd(o), [...r.children].forEach((a) => {
      a.style.background = "inherit", a.style.color = "inherit";
    });
  }, () => {
    t.draggable = !1, t.ondragstart = null, t.ondragover = null, t.ondragenter = null, t.ondrop = null;
  };
}
const L = {
  onDragStart: null,
  onDragEnd: null
};
function T(r, t) {
  t = { ...L, ...t };
  let e = null, o = null, n = null, a = !1, i = "", c = "";
  const v = (l) => {
    const u = l.currentTarget;
    !e && Array.from(u.classList).includes("draggable") && (o = (/* @__PURE__ */ new Date()).getTime(), e = u, n && clearTimeout(n), n = setTimeout(() => {
      e && (i = e.style.color, c = e.style.backgroundColor, e.style.color = "var(--ui-primary-text)", e.style.backgroundColor = "var(--ui-primary)", r.classList.add("ui-dragging"), a = !0, t != null && t.onDragStart && t.onDragStart());
    }, 200));
  }, b = (l) => {
    if (!o || !e) return;
    if (!a && (/* @__PURE__ */ new Date()).getTime() - o < 200) {
      f();
      return;
    }
    l.preventDefault(), a || (a = !0, t != null && t.onDragStart && t.onDragStart());
    let u;
    if (l instanceof TouchEvent) {
      const g = l.targetTouches[0];
      u = {
        clientX: g.clientX,
        clientY: g.clientY
      };
    } else
      u = {
        clientX: l.clientX,
        clientY: l.clientY
      };
    let s = document.elementFromPoint(u.clientX, u.clientY);
    if (s) {
      for (; !s.classList.contains("draggable") && s.parentElement; )
        s = s.parentElement;
      s.classList.contains("draggable") && ((() => {
        let d = e == null ? void 0 : e.previousElementSibling;
        for (; d; ) {
          if (d === s)
            return !0;
          d = d.previousElementSibling;
        }
        return !1;
      })() ? r.insertBefore(e, s) : r.insertBefore(e, s.nextElementSibling));
    }
  }, f = () => {
    n !== null && (clearTimeout(n), n = null), e && (e.style.color = i, e.style.backgroundColor = c, e = null), o = null, r.classList.remove("ui-dragging"), a && (a = !1, t != null && t.onDragEnd && t.onDragEnd());
  };
  return [...r.children].forEach((l) => {
    l.classList.add("draggable"), l.onmousedown = v, l.ontouchstart = v, l.onmousemove = b, l.ontouchmove = b, r.onmouseleave = l.onmouseup = f, l.ontouchend = f;
  }), () => {
    [...r.children].forEach((l) => {
      l.classList.remove("draggable"), l.onmousedown = null, l.ontouchstart = null, l.onmousemove = null, l.ontouchmove = null, r.onmouseleave = l.onmouseup = null, l.ontouchend = null;
    });
  };
}
const w = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createMobile: T,
  createNative: D
}, Symbol.toStringTag, { value: "Module" })), E = {
  color: "var(--ui-ripple-color, currentColor)",
  opacity: "var(--ui-ripple-opacity, 0.2)",
  centered: !1,
  spreadDuration: ".4s",
  spreadTiming: "linear",
  clearDuration: "1s",
  clearTiming: "ease-in-out",
  usePointer: !1
};
function x(r, t) {
  t = { ...E, ...t || {} };
  let e = null;
  const o = (c) => {
    e = y(c, t), r.addEventListener("pointermove", a);
  }, n = () => {
    r.removeEventListener("pointermove", a), p(e), e = null;
  }, a = () => n(), i = (c) => {
    e = y(c, t), p(e), e = null;
  };
  return r.classList.add("ripple-container"), r.style.overflow = "hidden", t.usePointer ? (r.addEventListener("pointerdown", o), r.addEventListener("pointerup", n), r.addEventListener("pointerleave", n)) : r.addEventListener("click", i), () => {
    if (r.classList.remove("ripple-container"), t.usePointer) {
      r.removeEventListener("pointerdown", o), r.removeEventListener("pointerup", n), r.removeEventListener("pointerleave", n), r.removeEventListener("pointermove", a);
      return;
    }
    r.removeEventListener("click", i);
  };
}
function y(r, t) {
  const e = document.createElement("div"), o = r.currentTarget;
  o.appendChild(e), e.classList.add("ripple"), e.style.position = "absolute", e.style.color = "inherit", e.style.borderRadius = "50%", e.style.pointerEvents = "none", e.style.width = "100px", e.style.height = "100px", e.style.marginTop = "-50px", e.style.marginLeft = "-50px", e.style.opacity = `${t.opacity}`, e.style.backgroundColor = `${t.color}`, e.style.transform = "scale(0) translate(0, 0)", e.style.transition = `transform ${t.spreadDuration} ${t.spreadTiming} 0s,opacity ${t.clearDuration} ${t.clearTiming} 0s`;
  const n = o.getBoundingClientRect();
  t.centered ? (e.style.top = `${n.height / 2}px`, e.style.left = `${n.width / 2}px`) : (e.style.top = `${r.clientY - n.top}px`, e.style.left = `${r.clientX - n.left}px`);
  const a = Math.max(n.width, n.height) * 0.02;
  return e.style.transform = `scale(${a}) translate(0, 0)`, e;
}
function p(r) {
  r && (r.addEventListener("transitionend", (t) => {
    t.propertyName === "opacity" && r.remove();
  }), r.style.opacity = "0");
}
const k = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  create: x,
  defaultOptions: E,
  start: y,
  stop: p
}, Symbol.toStringTag, { value: "Module" }));
function C() {
  return /(android)/i.test(navigator.userAgent);
}
function O(r) {
  return Object.entries(r).map(([t, e]) => `${t.replace(/[A-Z]/g, (o) => `-${o.toLowerCase()}`)}:${e}`).join(";") + ";";
}
export {
  $ as addGlobalStylesToShadowRoot,
  w as draggable,
  C as isAndroid,
  k as ripple,
  O as styles
};
