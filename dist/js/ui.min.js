class E {
  constructor() {
    this.listeners = {};
  }
  addListener(t, e) {
    return this.listeners[t] || (this.listeners[t] = []), this.listeners[t].push(e), () => this.removeListener(t, e);
  }
  removeListener(t, e) {
    this.listeners[t] && (this.listeners[t] = this.listeners[t].filter((i) => i !== e));
  }
  dispatch(t, e) {
    this.listeners[t] && this.listeners[t].forEach((i) => i(e));
  }
}
class $ {
  constructor(t) {
    this.prefix = "", this.events = new E(), this.data = {}, this.prefix = t;
  }
  get(t, e) {
    if (!(e != null && e.skipStore)) {
      const i = localStorage.getItem(`${this.prefix}${t}`);
      if (i !== null) return JSON.parse(i);
    }
    if (this.data.hasOwnProperty(t))
      return this.data[t];
  }
  set(t, e, i = !1, n) {
    if (i) {
      let a = null;
      n != null && n.skipStore ? a = null : a = localStorage.getItem(`${this.prefix}${t}`), a !== null ? this.data[t] = JSON.parse(a) : this.data.hasOwnProperty(t) || (this.data[t] = e);
    } else
      this.data[t] = e;
    n != null && n.skipStore || localStorage.setItem(
      `${this.prefix}${t}`,
      JSON.stringify(this.data[t])
    ), this.events.dispatch(t, this.data[t]);
  }
  update(t, e, i) {
    const n = this.get(t, i);
    if (n === void 0)
      throw new Error(`"${t}" not found, use \`set\``);
    this.set(t, e(n), !1, i);
  }
  listen(t, e, i = !1, n) {
    if (i) {
      const a = this.get(t, n);
      a !== void 0 && setTimeout(() => e(a));
    }
    return this.events.addListener(t, e);
  }
}
class x {
  constructor() {
    this.data = {}, this._lang = "";
  }
  get lang() {
    return this._lang;
  }
  use(t, e) {
    return new Promise((i, n) => {
      fetch(e).then((a) => a.json()).then((a) => {
        this._lang = t, this.data = a, i(this);
      }).catch((a) => n(a));
    });
  }
  get(...t) {
    const e = t.join(":");
    return this.data[e] || e;
  }
}
const L = {
  onDragStart: null,
  onDragging: null,
  onDragEnd: null
};
function b(r, t, e) {
  e = { ...L, ...e };
  const i = [...r.children].indexOf(t);
  return t.draggable = !0, t.ondragstart = (n) => {
    n.dataTransfer && (n.dataTransfer.effectAllowed = "move", n.dataTransfer.dropEffect = "move"), r.classList.add("ui-dragging"), e.onDragStart && e.onDragStart(i);
  }, t.ondragover = (n) => (n.preventDefault(), !1), t.ondragenter = (n) => {
    n.preventDefault(), [...r.children].forEach((a, s) => {
      if (s === i) {
        a.style.background = "var(--ui-primary)", a.style.color = "var(--ui-primary-text)";
        return;
      }
      a.style.background = "inherit", a.style.color = "inherit";
    }), e.onDragging && e.onDragging(i);
  }, t.ondrop = (n) => {
    n.preventDefault(), n.dataTransfer && (n.dataTransfer.dropEffect = "move"), r.classList.remove("ui-dragging"), e.onDragEnd && e.onDragEnd(i), [...r.children].forEach((a) => {
      a.style.background = "inherit", a.style.color = "inherit";
    });
  }, () => {
    t.draggable = !1, t.ondragstart = null, t.ondragover = null, t.ondragenter = null, t.ondrop = null;
  };
}
const S = {
  onDragStart: null,
  onDragEnd: null
};
function D(r, t) {
  t = { ...S, ...t };
  let e = null, i = null, n = null, a = !1, s = "", o = "";
  const p = (l) => {
    const d = l.currentTarget;
    !e && Array.from(d.classList).includes("draggable") && (i = (/* @__PURE__ */ new Date()).getTime(), e = d, n && clearTimeout(n), n = setTimeout(() => {
      e && (s = e.style.color, o = e.style.backgroundColor, e.style.color = "var(--ui-primary-text)", e.style.backgroundColor = "var(--ui-primary)", r.classList.add("ui-dragging"), a = !0, t != null && t.onDragStart && t.onDragStart());
    }, 200));
  }, v = (l) => {
    if (!i || !e) return;
    if (!a && (/* @__PURE__ */ new Date()).getTime() - i < 200) {
      f();
      return;
    }
    l.preventDefault(), a || (a = !0, t != null && t.onDragStart && t.onDragStart());
    let d;
    if (l instanceof TouchEvent) {
      const g = l.targetTouches[0];
      d = {
        clientX: g.clientX,
        clientY: g.clientY
      };
    } else
      d = {
        clientX: l.clientX,
        clientY: l.clientY
      };
    let u = document.elementFromPoint(d.clientX, d.clientY);
    if (u) {
      for (; !u.classList.contains("draggable") && u.parentElement; )
        u = u.parentElement;
      u.classList.contains("draggable") && ((() => {
        let c = e == null ? void 0 : e.previousElementSibling;
        for (; c; ) {
          if (c === u)
            return !0;
          c = c.previousElementSibling;
        }
        return !1;
      })() ? r.insertBefore(e, u) : r.insertBefore(e, u.nextElementSibling));
    }
  }, f = () => {
    n !== null && (clearTimeout(n), n = null), e && (e.style.color = s, e.style.backgroundColor = o, e = null), i = null, r.classList.remove("ui-dragging"), a && (a = !1, t != null && t.onDragEnd && t.onDragEnd());
  };
  return [...r.children].forEach((l) => {
    l.classList.add("draggable"), l.onmousedown = p, l.ontouchstart = p, l.onmousemove = v, l.ontouchmove = v, r.onmouseleave = l.onmouseup = f, l.ontouchend = f;
  }), () => {
    [...r.children].forEach((l) => {
      l.classList.remove("draggable"), l.onmousedown = null, l.ontouchstart = null, l.onmousemove = null, l.ontouchmove = null, r.onmouseleave = l.onmouseup = null, l.ontouchend = null;
    });
  };
}
const M = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createMobile: D,
  createNative: b
}, Symbol.toStringTag, { value: "Module" })), y = {
  color: "var(--ui-ripple-color, currentColor)",
  opacity: "var(--ui-ripple-opacity, 0.2)",
  centered: !1,
  spreadDuration: ".4s",
  spreadTiming: "linear",
  clearDuration: "1s",
  clearTiming: "ease-in-out",
  usePointer: !1
};
function w(r, t) {
  t = { ...y, ...t || {} };
  let e = null;
  const i = (o) => {
    e = h(o, t), r.addEventListener("pointermove", a);
  }, n = () => {
    r.removeEventListener("pointermove", a), m(e), e = null;
  }, a = () => n(), s = (o) => {
    e = h(o, t), m(e), e = null;
  };
  return r.classList.add("ripple-container"), r.style.overflow = "hidden", t.usePointer ? (r.addEventListener("pointerdown", i), r.addEventListener("pointerup", n), r.addEventListener("pointerleave", n)) : r.addEventListener("click", s), () => {
    if (r.classList.remove("ripple-container"), t.usePointer) {
      r.removeEventListener("pointerdown", i), r.removeEventListener("pointerup", n), r.removeEventListener("pointerleave", n), r.removeEventListener("pointermove", a);
      return;
    }
    r.removeEventListener("click", s);
  };
}
function h(r, t) {
  const e = document.createElement("div"), i = r.currentTarget;
  i.appendChild(e), e.classList.add("ripple"), e.style.position = "absolute", e.style.color = "inherit", e.style.borderRadius = "50%", e.style.pointerEvents = "none", e.style.width = "100px", e.style.height = "100px", e.style.marginTop = "-50px", e.style.marginLeft = "-50px", e.style.opacity = `${t.opacity}`, e.style.backgroundColor = `${t.color}`, e.style.transform = "scale(0) translate(0, 0)", e.style.transition = `transform ${t.spreadDuration} ${t.spreadTiming} 0s,opacity ${t.clearDuration} ${t.clearTiming} 0s`;
  const n = i.getBoundingClientRect();
  t.centered ? (e.style.top = `${n.height / 2}px`, e.style.left = `${n.width / 2}px`) : (e.style.top = `${r.clientY - n.top}px`, e.style.left = `${r.clientX - n.left}px`);
  const a = Math.max(n.width, n.height) * 0.02;
  return e.style.transform = `scale(${a}) translate(0, 0)`, e;
}
function m(r) {
  r && (r.addEventListener("transitionend", (t) => {
    t.propertyName === "opacity" && r.remove();
  }), r.style.opacity = "0");
}
const O = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  create: w,
  defaultOptions: y,
  start: h,
  stop: m
}, Symbol.toStringTag, { value: "Module" }));
function T(r, t) {
  let e = null;
  function i(n) {
    if (n.template !== void 0) {
      const a = document.querySelector(n.template);
      if (a === null)
        throw `${n.template} not found`;
      (e == null ? void 0 : e.onDestroy) !== void 0 && e.onDestroy(), e = null, a instanceof HTMLTemplateElement ? (r.innerHTML = "", r.appendChild(a.content.cloneNode(!0))) : r.innerHTML = a.innerHTML, e = n, e.onMount !== void 0 && e.onMount();
      return;
    }
    n.href !== void 0 && fetch(n.href).then((a) => a.text()).then((a) => {
      if (n.title !== void 0) {
        const s = document.querySelector("head > title");
        s !== null && (s.innerHTML = n.title);
      }
      (e == null ? void 0 : e.onDestroy) !== void 0 && e.onDestroy(), r.innerHTML = a, e = n, (e == null ? void 0 : e.onMount) !== void 0 && e.onMount(), n.scripts !== void 0 && n.scripts.forEach((s) => {
        const o = document.createElement("script");
        o.setAttribute("data-template", n.href), o.src = s.src, r.appendChild(o);
      });
    }).catch((a) => alert(a));
  }
  window.addEventListener("hashchange", () => {
    const n = window.location.hash.replace("#", ""), a = Object.keys(t).find((s) => n.startsWith(s));
    if (a === void 0) {
      const s = t["/"];
      if (s === void 0) {
        console.warn(
          `Window location “${n}” is missing in routes, and the fallback route “/“ is also missing.`
        );
        return;
      }
      i(s);
      return;
    }
    i(t[a]);
  }), window.dispatchEvent(new Event("hashchange"));
}
const _ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hash: T
}, Symbol.toStringTag, { value: "Module" }));
function C() {
  return /(android)/i.test(navigator.userAgent);
}
function P(r) {
  return Object.entries(r).map(([t, e]) => `${t.replace(/[A-Z]/g, (i) => `-${i.toLowerCase()}`)}:${e}`).join(";") + ";";
}
export {
  E as Events,
  x as LanguageHandler,
  $ as Store,
  M as draggable,
  C as isAndroid,
  O as ripple,
  _ as router,
  P as styles
};
