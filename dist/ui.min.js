let xe = null;
function Mt() {
  return xe === null && (xe = Array.from(document.styleSheets).map((i) => {
    const e = new CSSStyleSheet(), t = Array.from(i.cssRules).map((o) => o.cssText).join(" ");
    return e.replaceSync(t), e;
  })), xe;
}
function Vi(i) {
  i.adoptedStyleSheets.push(...Mt());
}
class Ve {
  constructor() {
    this.listeners = {};
  }
  addListener(e, t) {
    return this.listeners[e] || (this.listeners[e] = []), this.listeners[e].push(t), () => this.removeListener(e, t);
  }
  removeListener(e, t) {
    this.listeners[e] && (this.listeners[e] = this.listeners[e].filter(
      (o) => o !== t
    ));
  }
  dispatch(e, t) {
    this.listeners[e] && this.listeners[e].forEach((o) => o(t));
  }
}
class Ui {
  constructor() {
    this.callbacks = [];
  }
  add(...e) {
    this.callbacks.push(...e);
  }
  run() {
    this.callbacks.filter((e) => (e(), !1));
  }
}
/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const ae = globalThis, Ue = ae.ShadowRoot && (ae.ShadyCSS === void 0 || ae.ShadyCSS.nativeShadow) && "adoptedStyleSheets" in Document.prototype && "replace" in CSSStyleSheet.prototype, Be = Symbol(), Xe = /* @__PURE__ */ new WeakMap();
let vt = class {
  constructor(e, t, o) {
    if (this._$cssResult$ = !0, o !== Be) throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");
    this.cssText = e, this.t = t;
  }
  get styleSheet() {
    let e = this.o;
    const t = this.t;
    if (Ue && e === void 0) {
      const o = t !== void 0 && t.length === 1;
      o && (e = Xe.get(t)), e === void 0 && ((this.o = e = new CSSStyleSheet()).replaceSync(this.cssText), o && Xe.set(t, e));
    }
    return e;
  }
  toString() {
    return this.cssText;
  }
};
const jt = (i) => new vt(typeof i == "string" ? i : i + "", void 0, Be), f = (i, ...e) => {
  const t = i.length === 1 ? i[0] : e.reduce((o, r, s) => o + ((n) => {
    if (n._$cssResult$ === !0) return n.cssText;
    if (typeof n == "number") return n;
    throw Error("Value passed to 'css' function must be a 'css' function result: " + n + ". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.");
  })(r) + i[s + 1], i[0]);
  return new vt(t, i, Be);
}, Et = (i, e) => {
  if (Ue) i.adoptedStyleSheets = e.map((t) => t instanceof CSSStyleSheet ? t : t.styleSheet);
  else for (const t of e) {
    const o = document.createElement("style"), r = ae.litNonce;
    r !== void 0 && o.setAttribute("nonce", r), o.textContent = t.cssText, i.appendChild(o);
  }
}, We = Ue ? (i) => i : (i) => i instanceof CSSStyleSheet ? ((e) => {
  let t = "";
  for (const o of e.cssRules) t += o.cssText;
  return jt(t);
})(i) : i;
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const { is: At, defineProperty: Rt, getOwnPropertyDescriptor: Dt, getOwnPropertyNames: Vt, getOwnPropertySymbols: Ut, getPrototypeOf: Bt } = Object, O = globalThis, Ke = O.trustedTypes, Ht = Ke ? Ke.emptyScript : "", $e = O.reactiveElementPolyfillSupport, Y = (i, e) => i, ce = { toAttribute(i, e) {
  switch (e) {
    case Boolean:
      i = i ? Ht : null;
      break;
    case Object:
    case Array:
      i = i == null ? i : JSON.stringify(i);
  }
  return i;
}, fromAttribute(i, e) {
  let t = i;
  switch (e) {
    case Boolean:
      t = i !== null;
      break;
    case Number:
      t = i === null ? null : Number(i);
      break;
    case Object:
    case Array:
      try {
        t = JSON.parse(i);
      } catch {
        t = null;
      }
  }
  return t;
} }, He = (i, e) => !At(i, e), Je = { attribute: !0, type: String, converter: ce, reflect: !1, hasChanged: He };
Symbol.metadata ?? (Symbol.metadata = Symbol("metadata")), O.litPropertyMetadata ?? (O.litPropertyMetadata = /* @__PURE__ */ new WeakMap());
class U extends HTMLElement {
  static addInitializer(e) {
    this._$Ei(), (this.l ?? (this.l = [])).push(e);
  }
  static get observedAttributes() {
    return this.finalize(), this._$Eh && [...this._$Eh.keys()];
  }
  static createProperty(e, t = Je) {
    if (t.state && (t.attribute = !1), this._$Ei(), this.elementProperties.set(e, t), !t.noAccessor) {
      const o = Symbol(), r = this.getPropertyDescriptor(e, o, t);
      r !== void 0 && Rt(this.prototype, e, r);
    }
  }
  static getPropertyDescriptor(e, t, o) {
    const { get: r, set: s } = Dt(this.prototype, e) ?? { get() {
      return this[t];
    }, set(n) {
      this[t] = n;
    } };
    return { get() {
      return r == null ? void 0 : r.call(this);
    }, set(n) {
      const u = r == null ? void 0 : r.call(this);
      s.call(this, n), this.requestUpdate(e, u, o);
    }, configurable: !0, enumerable: !0 };
  }
  static getPropertyOptions(e) {
    return this.elementProperties.get(e) ?? Je;
  }
  static _$Ei() {
    if (this.hasOwnProperty(Y("elementProperties"))) return;
    const e = Bt(this);
    e.finalize(), e.l !== void 0 && (this.l = [...e.l]), this.elementProperties = new Map(e.elementProperties);
  }
  static finalize() {
    if (this.hasOwnProperty(Y("finalized"))) return;
    if (this.finalized = !0, this._$Ei(), this.hasOwnProperty(Y("properties"))) {
      const t = this.properties, o = [...Vt(t), ...Ut(t)];
      for (const r of o) this.createProperty(r, t[r]);
    }
    const e = this[Symbol.metadata];
    if (e !== null) {
      const t = litPropertyMetadata.get(e);
      if (t !== void 0) for (const [o, r] of t) this.elementProperties.set(o, r);
    }
    this._$Eh = /* @__PURE__ */ new Map();
    for (const [t, o] of this.elementProperties) {
      const r = this._$Eu(t, o);
      r !== void 0 && this._$Eh.set(r, t);
    }
    this.elementStyles = this.finalizeStyles(this.styles);
  }
  static finalizeStyles(e) {
    const t = [];
    if (Array.isArray(e)) {
      const o = new Set(e.flat(1 / 0).reverse());
      for (const r of o) t.unshift(We(r));
    } else e !== void 0 && t.push(We(e));
    return t;
  }
  static _$Eu(e, t) {
    const o = t.attribute;
    return o === !1 ? void 0 : typeof o == "string" ? o : typeof e == "string" ? e.toLowerCase() : void 0;
  }
  constructor() {
    super(), this._$Ep = void 0, this.isUpdatePending = !1, this.hasUpdated = !1, this._$Em = null, this._$Ev();
  }
  _$Ev() {
    var e;
    this._$ES = new Promise((t) => this.enableUpdating = t), this._$AL = /* @__PURE__ */ new Map(), this._$E_(), this.requestUpdate(), (e = this.constructor.l) == null || e.forEach((t) => t(this));
  }
  addController(e) {
    var t;
    (this._$EO ?? (this._$EO = /* @__PURE__ */ new Set())).add(e), this.renderRoot !== void 0 && this.isConnected && ((t = e.hostConnected) == null || t.call(e));
  }
  removeController(e) {
    var t;
    (t = this._$EO) == null || t.delete(e);
  }
  _$E_() {
    const e = /* @__PURE__ */ new Map(), t = this.constructor.elementProperties;
    for (const o of t.keys()) this.hasOwnProperty(o) && (e.set(o, this[o]), delete this[o]);
    e.size > 0 && (this._$Ep = e);
  }
  createRenderRoot() {
    const e = this.shadowRoot ?? this.attachShadow(this.constructor.shadowRootOptions);
    return Et(e, this.constructor.elementStyles), e;
  }
  connectedCallback() {
    var e;
    this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this.enableUpdating(!0), (e = this._$EO) == null || e.forEach((t) => {
      var o;
      return (o = t.hostConnected) == null ? void 0 : o.call(t);
    });
  }
  enableUpdating(e) {
  }
  disconnectedCallback() {
    var e;
    (e = this._$EO) == null || e.forEach((t) => {
      var o;
      return (o = t.hostDisconnected) == null ? void 0 : o.call(t);
    });
  }
  attributeChangedCallback(e, t, o) {
    this._$AK(e, o);
  }
  _$EC(e, t) {
    var s;
    const o = this.constructor.elementProperties.get(e), r = this.constructor._$Eu(e, o);
    if (r !== void 0 && o.reflect === !0) {
      const n = (((s = o.converter) == null ? void 0 : s.toAttribute) !== void 0 ? o.converter : ce).toAttribute(t, o.type);
      this._$Em = e, n == null ? this.removeAttribute(r) : this.setAttribute(r, n), this._$Em = null;
    }
  }
  _$AK(e, t) {
    var s;
    const o = this.constructor, r = o._$Eh.get(e);
    if (r !== void 0 && this._$Em !== r) {
      const n = o.getPropertyOptions(r), u = typeof n.converter == "function" ? { fromAttribute: n.converter } : ((s = n.converter) == null ? void 0 : s.fromAttribute) !== void 0 ? n.converter : ce;
      this._$Em = r, this[r] = u.fromAttribute(t, n.type), this._$Em = null;
    }
  }
  requestUpdate(e, t, o) {
    if (e !== void 0) {
      if (o ?? (o = this.constructor.getPropertyOptions(e)), !(o.hasChanged ?? He)(this[e], t)) return;
      this.P(e, t, o);
    }
    this.isUpdatePending === !1 && (this._$ES = this._$ET());
  }
  P(e, t, o) {
    this._$AL.has(e) || this._$AL.set(e, t), o.reflect === !0 && this._$Em !== e && (this._$Ej ?? (this._$Ej = /* @__PURE__ */ new Set())).add(e);
  }
  async _$ET() {
    this.isUpdatePending = !0;
    try {
      await this._$ES;
    } catch (t) {
      Promise.reject(t);
    }
    const e = this.scheduleUpdate();
    return e != null && await e, !this.isUpdatePending;
  }
  scheduleUpdate() {
    return this.performUpdate();
  }
  performUpdate() {
    var o;
    if (!this.isUpdatePending) return;
    if (!this.hasUpdated) {
      if (this.renderRoot ?? (this.renderRoot = this.createRenderRoot()), this._$Ep) {
        for (const [s, n] of this._$Ep) this[s] = n;
        this._$Ep = void 0;
      }
      const r = this.constructor.elementProperties;
      if (r.size > 0) for (const [s, n] of r) n.wrapped !== !0 || this._$AL.has(s) || this[s] === void 0 || this.P(s, this[s], n);
    }
    let e = !1;
    const t = this._$AL;
    try {
      e = this.shouldUpdate(t), e ? (this.willUpdate(t), (o = this._$EO) == null || o.forEach((r) => {
        var s;
        return (s = r.hostUpdate) == null ? void 0 : s.call(r);
      }), this.update(t)) : this._$EU();
    } catch (r) {
      throw e = !1, this._$EU(), r;
    }
    e && this._$AE(t);
  }
  willUpdate(e) {
  }
  _$AE(e) {
    var t;
    (t = this._$EO) == null || t.forEach((o) => {
      var r;
      return (r = o.hostUpdated) == null ? void 0 : r.call(o);
    }), this.hasUpdated || (this.hasUpdated = !0, this.firstUpdated(e)), this.updated(e);
  }
  _$EU() {
    this._$AL = /* @__PURE__ */ new Map(), this.isUpdatePending = !1;
  }
  get updateComplete() {
    return this.getUpdateComplete();
  }
  getUpdateComplete() {
    return this._$ES;
  }
  shouldUpdate(e) {
    return !0;
  }
  update(e) {
    this._$Ej && (this._$Ej = this._$Ej.forEach((t) => this._$EC(t, this[t]))), this._$EU();
  }
  updated(e) {
  }
  firstUpdated(e) {
  }
}
U.elementStyles = [], U.shadowRootOptions = { mode: "open" }, U[Y("elementProperties")] = /* @__PURE__ */ new Map(), U[Y("finalized")] = /* @__PURE__ */ new Map(), $e == null || $e({ ReactiveElement: U }), (O.reactiveElementVersions ?? (O.reactiveElementVersions = [])).push("2.0.4");
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const X = globalThis, he = X.trustedTypes, Qe = he ? he.createPolicy("lit-html", { createHTML: (i) => i }) : void 0, bt = "$lit$", P = `lit$${Math.random().toFixed(9).slice(2)}$`, yt = "?" + P, Gt = `<${yt}>`, R = document, W = () => R.createComment(""), K = (i) => i === null || typeof i != "object" && typeof i != "function", Ge = Array.isArray, Tt = (i) => Ge(i) || typeof (i == null ? void 0 : i[Symbol.iterator]) == "function", ke = `[ 	
\f\r]`, q = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g, et = /-->/g, tt = />/g, E = RegExp(`>|${ke}(?:([^\\s"'>=/]+)(${ke}*=${ke}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`, "g"), rt = /'/g, it = /"/g, mt = /^(?:script|style|textarea|title)$/i, Zt = (i) => (e, ...t) => ({ _$litType$: i, strings: e, values: t }), a = Zt(1), B = Symbol.for("lit-noChange"), y = Symbol.for("lit-nothing"), ot = /* @__PURE__ */ new WeakMap(), A = R.createTreeWalker(R, 129);
function _t(i, e) {
  if (!Ge(i) || !i.hasOwnProperty("raw")) throw Error("invalid template strings array");
  return Qe !== void 0 ? Qe.createHTML(e) : e;
}
const It = (i, e) => {
  const t = i.length - 1, o = [];
  let r, s = e === 2 ? "<svg>" : e === 3 ? "<math>" : "", n = q;
  for (let u = 0; u < t; u++) {
    const c = i[u];
    let v, b, g = -1, m = 0;
    for (; m < c.length && (n.lastIndex = m, b = n.exec(c), b !== null); ) m = n.lastIndex, n === q ? b[1] === "!--" ? n = et : b[1] !== void 0 ? n = tt : b[2] !== void 0 ? (mt.test(b[2]) && (r = RegExp("</" + b[2], "g")), n = E) : b[3] !== void 0 && (n = E) : n === E ? b[0] === ">" ? (n = r ?? q, g = -1) : b[1] === void 0 ? g = -2 : (g = n.lastIndex - b[2].length, v = b[1], n = b[3] === void 0 ? E : b[3] === '"' ? it : rt) : n === it || n === rt ? n = E : n === et || n === tt ? n = q : (n = E, r = void 0);
    const h = n === E && i[u + 1].startsWith("/>") ? " " : "";
    s += n === q ? c + Gt : g >= 0 ? (o.push(v), c.slice(0, g) + bt + c.slice(g) + P + h) : c + P + (g === -2 ? u : h);
  }
  return [_t(i, s + (i[t] || "<?>") + (e === 2 ? "</svg>" : e === 3 ? "</math>" : "")), o];
};
class J {
  constructor({ strings: e, _$litType$: t }, o) {
    let r;
    this.parts = [];
    let s = 0, n = 0;
    const u = e.length - 1, c = this.parts, [v, b] = It(e, t);
    if (this.el = J.createElement(v, o), A.currentNode = this.el.content, t === 2 || t === 3) {
      const g = this.el.content.firstChild;
      g.replaceWith(...g.childNodes);
    }
    for (; (r = A.nextNode()) !== null && c.length < u; ) {
      if (r.nodeType === 1) {
        if (r.hasAttributes()) for (const g of r.getAttributeNames()) if (g.endsWith(bt)) {
          const m = b[n++], h = r.getAttribute(g).split(P), _ = /([.?@])?(.*)/.exec(m);
          c.push({ type: 1, index: s, name: _[2], strings: h, ctor: _[1] === "." ? Nt : _[1] === "?" ? Ft : _[1] === "@" ? qt : be }), r.removeAttribute(g);
        } else g.startsWith(P) && (c.push({ type: 6, index: s }), r.removeAttribute(g));
        if (mt.test(r.tagName)) {
          const g = r.textContent.split(P), m = g.length - 1;
          if (m > 0) {
            r.textContent = he ? he.emptyScript : "";
            for (let h = 0; h < m; h++) r.append(g[h], W()), A.nextNode(), c.push({ type: 2, index: ++s });
            r.append(g[m], W());
          }
        }
      } else if (r.nodeType === 8) if (r.data === yt) c.push({ type: 2, index: s });
      else {
        let g = -1;
        for (; (g = r.data.indexOf(P, g + 1)) !== -1; ) c.push({ type: 7, index: s }), g += P.length - 1;
      }
      s++;
    }
  }
  static createElement(e, t) {
    const o = R.createElement("template");
    return o.innerHTML = e, o;
  }
}
function H(i, e, t = i, o) {
  var n, u;
  if (e === B) return e;
  let r = o !== void 0 ? (n = t._$Co) == null ? void 0 : n[o] : t._$Cl;
  const s = K(e) ? void 0 : e._$litDirective$;
  return (r == null ? void 0 : r.constructor) !== s && ((u = r == null ? void 0 : r._$AO) == null || u.call(r, !1), s === void 0 ? r = void 0 : (r = new s(i), r._$AT(i, t, o)), o !== void 0 ? (t._$Co ?? (t._$Co = []))[o] = r : t._$Cl = r), r !== void 0 && (e = H(i, r._$AS(i, e.values), r, o)), e;
}
class zt {
  constructor(e, t) {
    this._$AV = [], this._$AN = void 0, this._$AD = e, this._$AM = t;
  }
  get parentNode() {
    return this._$AM.parentNode;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  u(e) {
    const { el: { content: t }, parts: o } = this._$AD, r = ((e == null ? void 0 : e.creationScope) ?? R).importNode(t, !0);
    A.currentNode = r;
    let s = A.nextNode(), n = 0, u = 0, c = o[0];
    for (; c !== void 0; ) {
      if (n === c.index) {
        let v;
        c.type === 2 ? v = new re(s, s.nextSibling, this, e) : c.type === 1 ? v = new c.ctor(s, c.name, c.strings, this, e) : c.type === 6 && (v = new Yt(s, this, e)), this._$AV.push(v), c = o[++u];
      }
      n !== (c == null ? void 0 : c.index) && (s = A.nextNode(), n++);
    }
    return A.currentNode = R, r;
  }
  p(e) {
    let t = 0;
    for (const o of this._$AV) o !== void 0 && (o.strings !== void 0 ? (o._$AI(e, o, t), t += o.strings.length - 2) : o._$AI(e[t])), t++;
  }
}
class re {
  get _$AU() {
    var e;
    return ((e = this._$AM) == null ? void 0 : e._$AU) ?? this._$Cv;
  }
  constructor(e, t, o, r) {
    this.type = 2, this._$AH = y, this._$AN = void 0, this._$AA = e, this._$AB = t, this._$AM = o, this.options = r, this._$Cv = (r == null ? void 0 : r.isConnected) ?? !0;
  }
  get parentNode() {
    let e = this._$AA.parentNode;
    const t = this._$AM;
    return t !== void 0 && (e == null ? void 0 : e.nodeType) === 11 && (e = t.parentNode), e;
  }
  get startNode() {
    return this._$AA;
  }
  get endNode() {
    return this._$AB;
  }
  _$AI(e, t = this) {
    e = H(this, e, t), K(e) ? e === y || e == null || e === "" ? (this._$AH !== y && this._$AR(), this._$AH = y) : e !== this._$AH && e !== B && this._(e) : e._$litType$ !== void 0 ? this.$(e) : e.nodeType !== void 0 ? this.T(e) : Tt(e) ? this.k(e) : this._(e);
  }
  O(e) {
    return this._$AA.parentNode.insertBefore(e, this._$AB);
  }
  T(e) {
    this._$AH !== e && (this._$AR(), this._$AH = this.O(e));
  }
  _(e) {
    this._$AH !== y && K(this._$AH) ? this._$AA.nextSibling.data = e : this.T(R.createTextNode(e)), this._$AH = e;
  }
  $(e) {
    var s;
    const { values: t, _$litType$: o } = e, r = typeof o == "number" ? this._$AC(e) : (o.el === void 0 && (o.el = J.createElement(_t(o.h, o.h[0]), this.options)), o);
    if (((s = this._$AH) == null ? void 0 : s._$AD) === r) this._$AH.p(t);
    else {
      const n = new zt(r, this), u = n.u(this.options);
      n.p(t), this.T(u), this._$AH = n;
    }
  }
  _$AC(e) {
    let t = ot.get(e.strings);
    return t === void 0 && ot.set(e.strings, t = new J(e)), t;
  }
  k(e) {
    Ge(this._$AH) || (this._$AH = [], this._$AR());
    const t = this._$AH;
    let o, r = 0;
    for (const s of e) r === t.length ? t.push(o = new re(this.O(W()), this.O(W()), this, this.options)) : o = t[r], o._$AI(s), r++;
    r < t.length && (this._$AR(o && o._$AB.nextSibling, r), t.length = r);
  }
  _$AR(e = this._$AA.nextSibling, t) {
    var o;
    for ((o = this._$AP) == null ? void 0 : o.call(this, !1, !0, t); e && e !== this._$AB; ) {
      const r = e.nextSibling;
      e.remove(), e = r;
    }
  }
  setConnected(e) {
    var t;
    this._$AM === void 0 && (this._$Cv = e, (t = this._$AP) == null || t.call(this, e));
  }
}
class be {
  get tagName() {
    return this.element.tagName;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  constructor(e, t, o, r, s) {
    this.type = 1, this._$AH = y, this._$AN = void 0, this.element = e, this.name = t, this._$AM = r, this.options = s, o.length > 2 || o[0] !== "" || o[1] !== "" ? (this._$AH = Array(o.length - 1).fill(new String()), this.strings = o) : this._$AH = y;
  }
  _$AI(e, t = this, o, r) {
    const s = this.strings;
    let n = !1;
    if (s === void 0) e = H(this, e, t, 0), n = !K(e) || e !== this._$AH && e !== B, n && (this._$AH = e);
    else {
      const u = e;
      let c, v;
      for (e = s[0], c = 0; c < s.length - 1; c++) v = H(this, u[o + c], t, c), v === B && (v = this._$AH[c]), n || (n = !K(v) || v !== this._$AH[c]), v === y ? e = y : e !== y && (e += (v ?? "") + s[c + 1]), this._$AH[c] = v;
    }
    n && !r && this.j(e);
  }
  j(e) {
    e === y ? this.element.removeAttribute(this.name) : this.element.setAttribute(this.name, e ?? "");
  }
}
class Nt extends be {
  constructor() {
    super(...arguments), this.type = 3;
  }
  j(e) {
    this.element[this.name] = e === y ? void 0 : e;
  }
}
class Ft extends be {
  constructor() {
    super(...arguments), this.type = 4;
  }
  j(e) {
    this.element.toggleAttribute(this.name, !!e && e !== y);
  }
}
class qt extends be {
  constructor(e, t, o, r, s) {
    super(e, t, o, r, s), this.type = 5;
  }
  _$AI(e, t = this) {
    if ((e = H(this, e, t, 0) ?? y) === B) return;
    const o = this._$AH, r = e === y && o !== y || e.capture !== o.capture || e.once !== o.once || e.passive !== o.passive, s = e !== y && (o === y || r);
    r && this.element.removeEventListener(this.name, this, o), s && this.element.addEventListener(this.name, this, e), this._$AH = e;
  }
  handleEvent(e) {
    var t;
    typeof this._$AH == "function" ? this._$AH.call(((t = this.options) == null ? void 0 : t.host) ?? this.element, e) : this._$AH.handleEvent(e);
  }
}
class Yt {
  constructor(e, t, o) {
    this.element = e, this.type = 6, this._$AN = void 0, this._$AM = t, this.options = o;
  }
  get _$AU() {
    return this._$AM._$AU;
  }
  _$AI(e) {
    H(this, e);
  }
}
const Se = X.litHtmlPolyfillSupport;
Se == null || Se(J, re), (X.litHtmlVersions ?? (X.litHtmlVersions = [])).push("3.2.1");
const Xt = (i, e, t) => {
  const o = (t == null ? void 0 : t.renderBefore) ?? e;
  let r = o._$litPart$;
  if (r === void 0) {
    const s = (t == null ? void 0 : t.renderBefore) ?? null;
    o._$litPart$ = r = new re(e.insertBefore(W(), s), s, void 0, t ?? {});
  }
  return r._$AI(i), r;
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
let p = class extends U {
  constructor() {
    super(...arguments), this.renderOptions = { host: this }, this._$Do = void 0;
  }
  createRenderRoot() {
    var t;
    const e = super.createRenderRoot();
    return (t = this.renderOptions).renderBefore ?? (t.renderBefore = e.firstChild), e;
  }
  update(e) {
    const t = this.render();
    this.hasUpdated || (this.renderOptions.isConnected = this.isConnected), super.update(e), this._$Do = Xt(t, this.renderRoot, this.renderOptions);
  }
  connectedCallback() {
    var e;
    super.connectedCallback(), (e = this._$Do) == null || e.setConnected(!0);
  }
  disconnectedCallback() {
    var e;
    super.disconnectedCallback(), (e = this._$Do) == null || e.setConnected(!1);
  }
  render() {
    return B;
  }
};
var gt;
p._$litElement$ = !0, p.finalized = !0, (gt = globalThis.litElementHydrateSupport) == null || gt.call(globalThis, { LitElement: p });
const Le = globalThis.litElementPolyfillSupport;
Le == null || Le({ LitElement: p });
(globalThis.litElementVersions ?? (globalThis.litElementVersions = [])).push("4.1.1");
const Wt = {
  onDragStart: null,
  onDragging: null,
  onDragEnd: null
};
function Kt(i, e, t) {
  t = { ...Wt, ...t };
  const o = [...i.children].indexOf(e);
  return e.draggable = !0, e.ondragstart = (r) => {
    r.dataTransfer && (r.dataTransfer.effectAllowed = "move", r.dataTransfer.dropEffect = "move"), i.classList.add("dragging"), t.onDragStart && t.onDragStart(o);
  }, e.ondragover = (r) => (r.preventDefault(), !1), e.ondragenter = (r) => {
    r.preventDefault(), [...i.children].forEach((s, n) => {
      if (n === o) {
        s.style.background = "hsl(var(--ui-hsl-primary))", s.style.color = "hsl(var(--ui-hsl-primary-text))";
        return;
      }
      s.style.background = "inherit", s.style.color = "inherit";
    }), t.onDragging && t.onDragging(o);
  }, e.ondrop = (r) => {
    r.preventDefault(), r.dataTransfer && (r.dataTransfer.dropEffect = "move"), i.classList.remove("dragging"), t.onDragEnd && t.onDragEnd(o), [...i.children].forEach((s) => {
      s.style.background = "inherit", s.style.color = "inherit";
    });
  }, () => {
    e.draggable = !1, e.ondragstart = null, e.ondragover = null, e.ondragenter = null, e.ondrop = null;
  };
}
const Jt = {
  onDragStart: null,
  onDragEnd: null
};
function Qt(i, e) {
  e = { ...Jt, ...e };
  let t = null, o = null, r, s, n = null, u = !1, c = "", v = "";
  const b = (h) => {
    const _ = h.currentTarget;
    if (!t && Array.from(_.classList).includes("draggable")) {
      if (h instanceof TouchEvent) {
        const w = h.targetTouches[0];
        r = w.clientX, s = w.clientY;
      } else
        r = h.clientX, s = h.clientY;
      o = (/* @__PURE__ */ new Date()).getTime(), t = _, n && clearTimeout(n), n = setTimeout(() => {
        t && (c = t.style.color, v = t.style.backgroundColor, t.style.color = "hsl(var(--ui-hsl-primary-text))", t.style.backgroundColor = "hsl(var(--ui-hsl-primary))", i.classList.add("dragging"), u = !0, e != null && e.onDragStart && e.onDragStart());
      }, 200);
    }
  }, g = (h) => {
    if (!o || !t) return;
    if (!u && (/* @__PURE__ */ new Date()).getTime() - o < 200) {
      let L, x;
      if (h instanceof TouchEvent) {
        const Ye = h.targetTouches[0];
        L = Math.abs(r - Ye.clientX), x = Math.abs(s - Ye.clientY);
      } else
        L = Math.abs(r - h.clientX), x = Math.abs(s - h.clientY);
      if ((L > x ? L : x) < 24)
        return;
      m();
      return;
    }
    h.preventDefault(), u || (u = !0, e != null && e.onDragStart && e.onDragStart());
    let _;
    if (h instanceof TouchEvent) {
      const L = h.targetTouches[0];
      _ = {
        clientX: L.clientX,
        clientY: L.clientY
      };
    } else
      _ = {
        clientX: h.clientX,
        clientY: h.clientY
      };
    let w = document.elementFromPoint(_.clientX, _.clientY);
    if (w) {
      for (; !w.classList.contains("draggable") && w.parentElement; )
        w = w.parentElement;
      w.classList.contains("draggable") && ((() => {
        let x = t == null ? void 0 : t.previousElementSibling;
        for (; x; ) {
          if (x === w)
            return !0;
          x = x.previousElementSibling;
        }
        return !1;
      })() ? i.insertBefore(t, w) : i.insertBefore(
        t,
        w.nextElementSibling
      ));
    }
  }, m = () => {
    n !== null && (clearTimeout(n), n = null), t && (t.style.color = c, t.style.backgroundColor = v, t = null), o = null, i.classList.remove("dragging"), u && (u = !1, e != null && e.onDragEnd && e.onDragEnd());
  };
  return [...i.children].forEach((h) => {
    h.classList.add("draggable"), h.onmousedown = b, h.ontouchstart = b, h.onmousemove = g, h.ontouchmove = g, h.onmouseup = m, h.ontouchend = m;
  }), () => {
    [...i.children].forEach(
      (h) => {
        h.classList.remove("draggable"), h.onmousedown = null, h.ontouchstart = null, h.onmousemove = null, h.ontouchmove = null, h.onmouseup = null, h.ontouchend = null;
      }
    );
  };
}
const Gi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createMobile: Qt,
  createNative: Kt
}, Symbol.toStringTag, { value: "Module" })), wt = {
  color: "var(--ui-ripple-fg, currentColor)",
  opacity: "var(--ui-ripple-opacity, 0.2)",
  centered: !1,
  spreadDuration: ".4s",
  spreadTiming: "linear",
  clearDuration: "1s",
  clearTiming: "ease-in-out",
  usePointer: !1
};
function ye(i, e) {
  e = { ...wt, ...e || {} };
  let t = null;
  const o = (u) => {
    t = Oe(u, e), i.addEventListener("pointermove", s);
  }, r = () => {
    i.removeEventListener("pointermove", s), Me(t), t = null;
  }, s = () => r(), n = (u) => {
    t = Oe(u, e), Me(t), t = null;
  };
  return i.classList.add("ripple-container"), i.style.overflow = "hidden", e.usePointer ? (i.addEventListener("pointerdown", o), i.addEventListener("pointerup", r), i.addEventListener("pointerleave", r)) : i.addEventListener("click", n), () => {
    if (i.classList.remove("ripple-container"), e.usePointer) {
      i.removeEventListener("pointerdown", o), i.removeEventListener("pointerup", r), i.removeEventListener("pointerleave", r), i.removeEventListener("pointermove", s);
      return;
    }
    i.removeEventListener("click", n);
  };
}
function Oe(i, e) {
  const t = document.createElement("div"), o = i.currentTarget;
  o.appendChild(t), t.classList.add("ripple"), t.style.position = "absolute", t.style.color = "inherit", t.style.borderRadius = "50%", t.style.pointerEvents = "none", t.style.width = "100px", t.style.height = "100px", t.style.marginTop = "-50px", t.style.marginLeft = "-50px", t.style.opacity = `${e.opacity}`, t.style.backgroundColor = `${e.color}`, t.style.transform = "scale(0) translate(0, 0)", t.style.transition = `transform ${e.spreadDuration} ${e.spreadTiming} 0s,opacity ${e.clearDuration} ${e.clearTiming} 0s`;
  const r = o.getBoundingClientRect();
  e.centered ? (t.style.top = `${r.height / 2}px`, t.style.left = `${r.width / 2}px`) : (t.style.top = `${i.clientY - r.top}px`, t.style.left = `${i.clientX - r.left}px`);
  const s = Math.max(r.width, r.height) * 0.02;
  return t.style.transform = `scale(${s}) translate(0, 0)`, t;
}
function Me(i) {
  i && (i.addEventListener("transitionend", (e) => {
    e.propertyName === "opacity" && i.remove();
  }), i.style.opacity = "0");
}
const Ti = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  create: ye,
  defaultOptions: wt,
  start: Oe,
  stop: Me
}, Symbol.toStringTag, { value: "Module" }));
function Zi() {
  return /(android)/i.test(navigator.userAgent);
}
function Ii(i) {
  return Object.entries(i).map(
    ([e, t]) => `${e.replace(/[A-Z]/g, (o) => `-${o.toLowerCase()}`)}:${t}`
  ).join(";") + ";";
}
const er = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M5 19.6693V4C5 3.44772 5.44772 3 6 3H18C18.5523 3 19 3.44772 19 4V19.6693C19 20.131 18.4277 20.346 18.1237 19.9985L12 13L5.87629 19.9985C5.57227 20.346 5 20.131 5 19.6693Z"
                stroke="currentColor"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, tr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M5 13.3636L8.03559 16.3204C8.42388 16.6986 9.04279 16.6986 9.43108 16.3204L19 7"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, Te = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M17 9.5L12 14.5L7 9.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, rr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M14.5 17L9.5 12L14.5 7"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, Ct = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M7 17L16.8995 7.10051"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M7 7.00001L16.8995 16.8995"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, ir = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M13 3L16 6L19 9M13 3L5 3L5 21L19 21L19 9M13 3L13 9L19 9"
                stroke="currentColor"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, or = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M5 12V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V12"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M12 3L12 15M12 15L16 11M12 15L8 11"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, sr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <circle
                cx="9.5"
                cy="6"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="9.5"
                cy="10"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="9.5"
                cy="14"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="9.5"
                cy="18"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="14.5"
                cy="6"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="14.5"
                cy="10"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="14.5"
                cy="14"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="14.5"
                cy="18"
                r="0.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
        </g>
    </svg>
`, nr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M6 12H18"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M6 15.5H18"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M6 8.5H18"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, lr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="transparent"></rect>
            <circle
                cx="12"
                cy="7"
                r="0.5"
                transform="rotate(90 12 7)"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="12"
                cy="12"
                r="0.5"
                transform="rotate(90 12 12)"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
            <circle
                cx="12"
                cy="17"
                r="0.5"
                transform="rotate(90 12 17)"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></circle>
        </g>
    </svg>
`, ar = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M15.6287 5.12132L4.31497 16.435M15.6287 5.12132L19.1642 8.65685M15.6287 5.12132L17.0429 3.70711C17.4334 3.31658 18.0666 3.31658 18.4571 3.70711L20.5784 5.82843C20.969 6.21895 20.969 6.85212 20.5784 7.24264L19.1642 8.65685M7.85051 19.9706L4.31497 16.435M7.85051 19.9706L19.1642 8.65685M7.85051 19.9706L3.25431 21.0312L4.31497 16.435"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, cr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M12 6V18"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M6 12H18"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, hr = a`
    <svg
        style="color: inherit;"
        viewBox="0 0 64 64"
        fill="transparent"
        xmlns="http://www.w3.org/2000/svg"
    >
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <style type="text/css">
                .st0 {
                    fill: var(--ui-svg-bg, red);
                    transition: fill 0.25s linear;
                }
                .st1 {
                    opacity: 0.2;
                }
                .st2 {
                    fill: var(--ui-svg-bg, red);
                    transition: fill 0.25s linear;
                }
                .st3 {
                    fill: none;
                    stroke: var(--ui-svg-fg, currentColor);
                    stroke-width: 4;
                    stroke-linecap: round;
                    stroke-miterlimit: 10;
                    transition: fill 0.25s linear;
                }
            </style>
            <circle class="st0" cx="32" cy="32" r="32"></circle>
            <g class="st1">
                <path
                    class="st2"
                    d="M32,52c-9.9,0-18-8.1-18-18c0-6.4,3.4-12.3,8.9-15.5c1-0.6,2.2-0.2,2.7,0.7c0.6,1,0.2,2.2-0.7,2.7 C20.7,24.4,18,29.1,18,34c0,7.7,6.3,14,14,14c7.7,0,14-6.3,14-14c0-5.1-2.7-9.7-7.2-12.2c-1-0.5-1.3-1.8-0.8-2.7 c0.5-1,1.8-1.3,2.7-0.8C46.5,21.5,50,27.5,50,34C50,43.9,41.9,52,32,52z"
                ></path>
            </g>
            <g class="st1">
                <path
                    class="st2"
                    d="M32,36c-1.1,0-2-0.9-2-2V14c0-1.1,0.9-2,2-2c1.1,0,2,0.9,2,2v20C34,35.1,33.1,36,32,36z"
                ></path>
            </g>
            <path
                class="st3"
                d="M39.8,18c4.9,2.7,8.2,8,8.2,14c0,8.8-7.2,16-16,16c-8.8,0-16-7.2-16-16c0-5.9,3.2-11,7.9-13.8"
            ></path>
            <line class="st3" x1="32" y1="32" x2="32" y2="12"></line>
        </g>
    </svg>
`, ur = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M18.75 17H20C20.5523 17 21 16.5523 21 16V8C21 7.44772 20.5523 7 20 7H4C3.44772 7 3 7.44772 3 8V16C3 16.5523 3.44772 17 4 17H5.25"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M6 12C6 11.4477 6.44772 11 7 11H17C17.5523 11 18 11.4477 18 12V20C18 20.5523 17.5523 21 17 21H7C6.44772 21 6 20.5523 6 20V12Z"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M6 4C6 3.44772 6.44772 3 7 3H17C17.5523 3 18 3.44772 18 4V7H6V4Z"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M8.5 13.5H15.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M8.5 18.5H15.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M8.5 16H15.5"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, pr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill=""></rect>
            <path
                d="M21.3687 13.5827C21.4144 13.3104 21.2306 13.0526 20.9583 13.0069C20.686 12.9612 20.4281 13.1449 20.3825 13.4173L21.3687 13.5827ZM12 20.5C7.30558 20.5 3.5 16.6944 3.5 12H2.5C2.5 17.2467 6.75329 21.5 12 21.5V20.5ZM3.5 12C3.5 7.30558 7.30558 3.5 12 3.5V2.5C6.75329 2.5 2.5 6.75329 2.5 12H3.5ZM12 3.5C15.3367 3.5 18.2252 5.4225 19.6167 8.22252L20.5122 7.77748C18.9583 4.65062 15.7308 2.5 12 2.5V3.5ZM20.3825 13.4173C19.7081 17.437 16.2112 20.5 12 20.5V21.5C16.7077 21.5 20.6148 18.0762 21.3687 13.5827L20.3825 13.4173Z"
                fill="currentColor"
            ></path>
            <path
                d="M20.4716 2.42157V8.07843H14.8147"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, xt = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <g clip-path="url(#clip0_15_152)">
                <rect width="24" height="24" fill="none"></rect>
                <circle
                    cx="10.5"
                    cy="10.5"
                    r="6.5"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></circle>
                <path
                    d="M19.6464 20.3536C19.8417 20.5488 20.1583 20.5488 20.3536 20.3536C20.5488 20.1583 20.5488 19.8417 20.3536 19.6464L19.6464 20.3536ZM20.3536 19.6464L15.3536 14.6464L14.6464 15.3536L19.6464 20.3536L20.3536 19.6464Z"
                    fill="currentColor"
                ></path>
            </g>
            <defs>
                <clipPath id="clip0_15_152">
                    <rect width="24" height="24" fill="none"></rect>
                </clipPath>
            </defs>
        </g>
    </svg>
`, dr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M13.5 2L13.9961 1.93798C13.9649 1.68777 13.7522 1.5 13.5 1.5V2ZM10.5 2V1.5C10.2478 1.5 10.0351 1.68777 10.0039 1.93798L10.5 2ZM13.7747 4.19754L13.2786 4.25955C13.3047 4.46849 13.4589 4.63867 13.6642 4.68519L13.7747 4.19754ZM16.2617 5.22838L15.995 5.6513C16.1731 5.76362 16.4024 5.75233 16.5687 5.62306L16.2617 5.22838ZM18.0104 3.86826L18.364 3.51471C18.1857 3.3364 17.9025 3.31877 17.7034 3.47359L18.0104 3.86826ZM20.1317 5.98958L20.5264 6.29655C20.6812 6.09751 20.6636 5.81434 20.4853 5.63603L20.1317 5.98958ZM18.7716 7.73831L18.3769 7.43134C18.2477 7.59754 18.2364 7.82693 18.3487 8.00503L18.7716 7.73831ZM19.8025 10.2253L19.3148 10.3358C19.3613 10.5411 19.5315 10.6953 19.7404 10.7214L19.8025 10.2253ZM22 10.5H22.5C22.5 10.2478 22.3122 10.0351 22.062 10.0039L22 10.5ZM22 13.5L22.062 13.9961C22.3122 13.9649 22.5 13.7522 22.5 13.5H22ZM19.8025 13.7747L19.7404 13.2786C19.5315 13.3047 19.3613 13.4589 19.3148 13.6642L19.8025 13.7747ZM18.7716 16.2617L18.3487 15.995C18.2364 16.1731 18.2477 16.4025 18.3769 16.5687L18.7716 16.2617ZM20.1317 18.0104L20.4853 18.364C20.6636 18.1857 20.6812 17.9025 20.5264 17.7034L20.1317 18.0104ZM18.0104 20.1317L17.7034 20.5264C17.9025 20.6812 18.1857 20.6636 18.364 20.4853L18.0104 20.1317ZM16.2617 18.7716L16.5687 18.3769C16.4024 18.2477 16.1731 18.2364 15.995 18.3487L16.2617 18.7716ZM13.7747 19.8025L13.6642 19.3148C13.4589 19.3613 13.3047 19.5315 13.2786 19.7404L13.7747 19.8025ZM13.5 22V22.5C13.7522 22.5 13.9649 22.3122 13.9961 22.062L13.5 22ZM10.5 22L10.0039 22.062C10.0351 22.3122 10.2478 22.5 10.5 22.5V22ZM10.2253 19.8025L10.7214 19.7404C10.6953 19.5315 10.5411 19.3613 10.3358 19.3148L10.2253 19.8025ZM7.73832 18.7716L8.00504 18.3487C7.82694 18.2364 7.59756 18.2477 7.43135 18.3769L7.73832 18.7716ZM5.98959 20.1317L5.63604 20.4853C5.81435 20.6636 6.09752 20.6812 6.29656 20.5264L5.98959 20.1317ZM3.86827 18.0104L3.4736 17.7034C3.31878 17.9025 3.33641 18.1857 3.51472 18.364L3.86827 18.0104ZM5.22839 16.2617L5.62307 16.5687C5.75234 16.4025 5.76363 16.1731 5.65131 15.995L5.22839 16.2617ZM4.19754 13.7747L4.68519 13.6642C4.63867 13.4589 4.46849 13.3047 4.25955 13.2786L4.19754 13.7747ZM2 13.5H1.5C1.5 13.7522 1.68777 13.9649 1.93798 13.9961L2 13.5ZM2 10.5L1.93798 10.0039C1.68777 10.0351 1.5 10.2478 1.5 10.5H2ZM4.19754 10.2253L4.25955 10.7214C4.46849 10.6953 4.63867 10.5411 4.68519 10.3358L4.19754 10.2253ZM5.22839 7.73831L5.65131 8.00503C5.76363 7.82693 5.75234 7.59755 5.62307 7.43134L5.22839 7.73831ZM3.86827 5.98959L3.51472 5.63603C3.33641 5.81434 3.31878 6.09751 3.47359 6.29656L3.86827 5.98959ZM5.98959 3.86827L6.29656 3.47359C6.09752 3.31878 5.81434 3.33641 5.63604 3.51471L5.98959 3.86827ZM7.73832 5.22839L7.43135 5.62306C7.59755 5.75233 7.82694 5.76363 8.00504 5.6513L7.73832 5.22839ZM10.2253 4.19754L10.3358 4.68519C10.5411 4.63867 10.6953 4.46849 10.7214 4.25955L10.2253 4.19754ZM13.5 1.5H10.5V2.5H13.5V1.5ZM14.2708 4.13552L13.9961 1.93798L13.0039 2.06202L13.2786 4.25955L14.2708 4.13552ZM16.5284 4.80547C15.7279 4.30059 14.8369 3.92545 13.8851 3.70989L13.6642 4.68519C14.503 4.87517 15.2886 5.20583 15.995 5.6513L16.5284 4.80547ZM16.5687 5.62306L18.3174 4.26294L17.7034 3.47359L15.9547 4.83371L16.5687 5.62306ZM17.6569 4.22182L19.7782 6.34314L20.4853 5.63603L18.364 3.51471L17.6569 4.22182ZM19.7371 5.68261L18.3769 7.43134L19.1663 8.04528L20.5264 6.29655L19.7371 5.68261ZM20.2901 10.1149C20.0746 9.16313 19.6994 8.27213 19.1945 7.47158L18.3487 8.00503C18.7942 8.71138 19.1248 9.49695 19.3148 10.3358L20.2901 10.1149ZM22.062 10.0039L19.8645 9.72917L19.7404 10.7214L21.938 10.9961L22.062 10.0039ZM22.5 13.5V10.5H21.5V13.5H22.5ZM19.8645 14.2708L22.062 13.9961L21.938 13.0039L19.7404 13.2786L19.8645 14.2708ZM19.1945 16.5284C19.6994 15.7279 20.0746 14.8369 20.2901 13.8851L19.3148 13.6642C19.1248 14.503 18.7942 15.2886 18.3487 15.995L19.1945 16.5284ZM20.5264 17.7034L19.1663 15.9547L18.3769 16.5687L19.7371 18.3174L20.5264 17.7034ZM18.364 20.4853L20.4853 18.364L19.7782 17.6569L17.6569 19.7782L18.364 20.4853ZM15.9547 19.1663L17.7034 20.5264L18.3174 19.7371L16.5687 18.3769L15.9547 19.1663ZM13.8851 20.2901C14.8369 20.0746 15.7279 19.6994 16.5284 19.1945L15.995 18.3487C15.2886 18.7942 14.503 19.1248 13.6642 19.3148L13.8851 20.2901ZM13.9961 22.062L14.2708 19.8645L13.2786 19.7404L13.0039 21.938L13.9961 22.062ZM10.5 22.5H13.5V21.5H10.5V22.5ZM9.72917 19.8645L10.0039 22.062L10.9961 21.938L10.7214 19.7404L9.72917 19.8645ZM7.4716 19.1945C8.27214 19.6994 9.16314 20.0746 10.1149 20.2901L10.3358 19.3148C9.49696 19.1248 8.71139 18.7942 8.00504 18.3487L7.4716 19.1945ZM6.29656 20.5264L8.04529 19.1663L7.43135 18.3769L5.68262 19.7371L6.29656 20.5264ZM3.51472 18.364L5.63604 20.4853L6.34315 19.7782L4.22183 17.6569L3.51472 18.364ZM4.83372 15.9547L3.4736 17.7034L4.26295 18.3174L5.62307 16.5687L4.83372 15.9547ZM3.70989 13.8851C3.92545 14.8369 4.30059 15.7279 4.80547 16.5284L5.65131 15.995C5.20584 15.2886 4.87517 14.503 4.68519 13.6642L3.70989 13.8851ZM1.93798 13.9961L4.13552 14.2708L4.25955 13.2786L2.06202 13.0039L1.93798 13.9961ZM1.5 10.5V13.5H2.5V10.5H1.5ZM4.13552 9.72917L1.93798 10.0039L2.06202 10.9961L4.25955 10.7214L4.13552 9.72917ZM4.80547 7.47159C4.30059 8.27213 3.92545 9.16313 3.70989 10.1149L4.68519 10.3358C4.87517 9.49696 5.20583 8.71138 5.65131 8.00503L4.80547 7.47159ZM3.47359 6.29656L4.83371 8.04528L5.62307 7.43134L4.26295 5.68262L3.47359 6.29656ZM5.63604 3.51471L3.51472 5.63603L4.22182 6.34314L6.34314 4.22182L5.63604 3.51471ZM8.04529 4.83371L6.29656 3.47359L5.68262 4.26294L7.43135 5.62306L8.04529 4.83371ZM10.1149 3.70989C9.16313 3.92545 8.27214 4.30059 7.4716 4.80547L8.00504 5.6513C8.71139 5.20583 9.49696 4.87517 10.3358 4.68519L10.1149 3.70989ZM10.0039 1.93798L9.72917 4.13552L10.7214 4.25955L10.9961 2.06202L10.0039 1.93798Z"
                fill="currentColor"
            ></path>
            <circle
                cx="12"
                cy="12"
                r="4"
                stroke="currentColor"
                stroke-linejoin="round"
            ></circle>
        </g>
    </svg>
`, fr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <g clip-path="url(#clip0_15_72)">
                <rect width="24" height="24" fill="none"></rect>
                <circle
                    cx="7"
                    cy="12"
                    r="2"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></circle>
                <circle
                    cx="17"
                    cy="6"
                    r="2"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></circle>
                <path d="M15 7L8.5 11" stroke="currentColor"></path>
                <circle
                    cx="17"
                    cy="18"
                    r="2"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></circle>
                <path d="M8.5 13.5L15 17" stroke="currentColor"></path>
            </g>
            <defs>
                <clipPath id="clip0_15_72">
                    <rect width="24" height="24" fill="none"></rect>
                </clipPath>
            </defs>
        </g>
    </svg>
`, gr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <g filter="url(#filter0_d_15_286)">
                <path
                    d="M3 8.26667V19C3 19.5523 3.44772 20 4 20H20C20.5523 20 21 19.5523 21 19V8.26667M3 8.26667V5C3 4.44772 3.44772 4 4 4H20C20.5523 4 21 4.44772 21 5V8.26667M3 8.26667H21"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></path>
            </g>
            <g filter="url(#filter1_d_15_286)">
                <circle
                    cx="12"
                    cy="14"
                    r="2"
                    stroke="currentColor"
                    stroke-linejoin="round"
                ></circle>
            </g>
            <g filter="url(#filter2_d_15_286)">
                <path
                    d="M7 2V5"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                ></path>
            </g>
            <g filter="url(#filter3_d_15_286)">
                <path
                    d="M17 2V5"
                    stroke="currentColor"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                ></path>
            </g>
            <defs>
                <filter
                    id="filter0_d_15_286"
                    x="1.5"
                    y="3.5"
                    width="21"
                    height="19"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood
                        flood-opacity="0"
                        result="BackgroundImageFix"
                    ></feFlood>
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    ></feColorMatrix>
                    <feOffset dy="1"></feOffset>
                    <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                    <feColorMatrix
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    ></feColorMatrix>
                    <feBlend
                        mode="normal"
                        in2="BackgroundImageFix"
                        result="effect1_dropShadow_15_286"
                    ></feBlend>
                    <feBlend
                        mode="normal"
                        in="SourceGraphic"
                        in2="effect1_dropShadow_15_286"
                        result="shape"
                    ></feBlend>
                </filter>
                <filter
                    id="filter1_d_15_286"
                    x="8.5"
                    y="11.5"
                    width="7"
                    height="7"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood
                        flood-opacity="0"
                        result="BackgroundImageFix"
                    ></feFlood>
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    ></feColorMatrix>
                    <feOffset dy="1"></feOffset>
                    <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                    <feColorMatrix
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    ></feColorMatrix>
                    <feBlend
                        mode="normal"
                        in2="BackgroundImageFix"
                        result="effect1_dropShadow_15_286"
                    ></feBlend>
                    <feBlend
                        mode="normal"
                        in="SourceGraphic"
                        in2="effect1_dropShadow_15_286"
                        result="shape"
                    ></feBlend>
                </filter>
                <filter
                    id="filter2_d_15_286"
                    x="5.5"
                    y="1.5"
                    width="3"
                    height="6"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood
                        flood-opacity="0"
                        result="BackgroundImageFix"
                    ></feFlood>
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    ></feColorMatrix>
                    <feOffset dy="1"></feOffset>
                    <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                    <feColorMatrix
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    ></feColorMatrix>
                    <feBlend
                        mode="normal"
                        in2="BackgroundImageFix"
                        result="effect1_dropShadow_15_286"
                    ></feBlend>
                    <feBlend
                        mode="normal"
                        in="SourceGraphic"
                        in2="effect1_dropShadow_15_286"
                        result="shape"
                    ></feBlend>
                </filter>
                <filter
                    id="filter3_d_15_286"
                    x="15.5"
                    y="1.5"
                    width="3"
                    height="6"
                    filterUnits="userSpaceOnUse"
                    color-interpolation-filters="sRGB"
                >
                    <feFlood
                        flood-opacity="0"
                        result="BackgroundImageFix"
                    ></feFlood>
                    <feColorMatrix
                        in="SourceAlpha"
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                        result="hardAlpha"
                    ></feColorMatrix>
                    <feOffset dy="1"></feOffset>
                    <feGaussianBlur stdDeviation="0.5"></feGaussianBlur>
                    <feColorMatrix
                        type="matrix"
                        values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0"
                    ></feColorMatrix>
                    <feBlend
                        mode="normal"
                        in2="BackgroundImageFix"
                        result="effect1_dropShadow_15_286"
                    ></feBlend>
                    <feBlend
                        mode="normal"
                        in="SourceGraphic"
                        in2="effect1_dropShadow_15_286"
                        result="shape"
                    ></feBlend>
                </filter>
            </defs>
        </g>
    </svg>
`, vr = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M5 7.5H19L18 21H6L5 7.5Z"
                stroke="currentColor"
                stroke-linejoin="round"
            ></path>
            <path
                d="M15.5 9.5L15 19"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M12 9.5V19"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M8.5 9.5L9 19"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M16 5H19C20.1046 5 21 5.89543 21 7V7.5H3V7C3 5.89543 3.89543 5 5 5H8M16 5L15 3H9L8 5M16 5H8"
                stroke="currentColor"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, br = a`
    <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
        <g
            id="SVGRepo_tracerCarrier"
            stroke-linecap="round"
            stroke-linejoin="round"
        ></g>
        <g id="SVGRepo_iconCarrier">
            <rect width="24" height="24" fill="none"></rect>
            <path
                d="M5 12V18C5 18.5523 5.44772 19 6 19H18C18.5523 19 19 18.5523 19 18V12"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
            <path
                d="M12 15L12 3M12 3L8 7M12 3L16 7"
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
            ></path>
        </g>
    </svg>
`, yr = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bookmark: er,
  checkmark: tr,
  chevronDown: Te,
  chevronLeft: rr,
  close: Ct,
  documentNew: ir,
  download: or,
  drag: sr,
  menu: nr,
  moreVertical: lr,
  pen: ar,
  plus: cr,
  power: hr,
  printer: ur,
  refresh: pr,
  search: xt,
  settings: dr,
  share: fr,
  today: gr,
  trash: vr,
  upload: br
}, Symbol.toStringTag, { value: "Module" })), zi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  smoothieLineIcons: yr
}, Symbol.toStringTag, { value: "Module" }));
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const d = (i) => (e, t) => {
  t !== void 0 ? t.addInitializer(() => {
    customElements.define(i, e);
  }) : customElements.define(i, e);
};
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const mr = { attribute: !0, type: String, converter: ce, reflect: !1, hasChanged: He }, _r = (i = mr, e, t) => {
  const { kind: o, metadata: r } = t;
  let s = globalThis.litPropertyMetadata.get(r);
  if (s === void 0 && globalThis.litPropertyMetadata.set(r, s = /* @__PURE__ */ new Map()), s.set(t.name, i), o === "accessor") {
    const { name: n } = t;
    return { set(u) {
      const c = e.get.call(this);
      e.set.call(this, u), this.requestUpdate(n, c, i);
    }, init(u) {
      return u !== void 0 && this.P(n, void 0, i), u;
    } };
  }
  if (o === "setter") {
    const { name: n } = t;
    return function(u) {
      const c = this[n];
      e.call(this, u), this.requestUpdate(n, c, i);
    };
  }
  throw Error("Unsupported decorator location: " + o);
};
function l(i) {
  return (e, t) => typeof t == "object" ? _r(i, e, t) : ((o, r, s) => {
    const n = r.hasOwnProperty(s);
    return r.constructor.createProperty(s, n ? { ...o, wrapped: !0 } : o), n ? Object.getOwnPropertyDescriptor(r, s) : void 0;
  })(i, e, t);
}
var wr = Object.defineProperty, Cr = Object.getOwnPropertyDescriptor, xr = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Cr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && wr(e, t, r), r;
};
let st = class extends p {
  static get styles() {
    return f`
            :host {
                display: block;

                z-index: 999;
                position: fixed !important;
                right: 0;
                bottom: 0;

                width: fit-content;
                max-width: 100%;
                height: fit-content;
                max-height: 100%;

                background: transparent;

                border-radius: var(--ui-radius);

                overflow: auto;

                /* Disable touch actions and pointer events */

                pointer-events: none;

                -ms-touch-action: none;
                touch-action: none;
            }

            ui-flex-grid {
                padding: var(--ui-spacing);
            }

            ::slotted(*) {
                pointer-events: auto;

                -ms-touch-action: auto;
                touch-action: auto;
            }
        `;
  }
  render() {
    return a`
            <ui-flex-grid class="container" gap="0.25rem">
                <slot></slot>
            </ui-flex-grid>
        `;
  }
  addAlert(i) {
    var t;
    const e = (t = this.shadowRoot) == null ? void 0 : t.querySelector(".container");
    return e && e.append(i), () => this.removeAlert(i);
  }
  removeAlert(i) {
    var t;
    const e = (t = this.shadowRoot) == null ? void 0 : t.querySelector(".container");
    e && e.removeChild(i);
  }
};
st = xr([
  d("ui-alerts")
], st);
var $r = Object.defineProperty, kr = Object.getOwnPropertyDescriptor, Ze = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? kr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && $r(e, t, r), r;
};
let ue = class extends p {
  constructor() {
    super(...arguments), this.variant = "info", this.message = "";
  }
  static get styles() {
    return f`
            :host {
                position: relative;

                flex: 1;
                display: block;

                border-radius: var(--ui-radius);
                border: 1px solid hsl(var(--ui-hsl-borderColor));

                padding: var(--ui-spacing);

                width: 28rem;
                max-width: 100%;

                cursor: pointer;
            }

            :host([variant="info"]) {
                background-color: hsl(var(--ui-hsl-info));
                color: hsl(var(--ui-hsl-info-text));
            }

            :host([variant="warning"]) {
                background-color: hsl(48, 100%, 50%);
                background-color: hsl(var(--ui-hsl-warning));
                color: hsl(var(--ui-hsl-warning-text));
            }

            :host([variant="error"]) {
                background-color: hsl(var(--ui-hsl-error));
                color: hsl(var(--ui-hsl-error-text));
            }

            ui-text {
                flex-grow: 1;
            }
        `;
  }
  render() {
    return a` <ui-text style="font-size: 0.9rem;">${this.message}</ui-text> `;
  }
  firstUpdated(i) {
    super.firstUpdated(i), this.addEventListener("click", () => {
      this.parentElement && this.parentElement.removeChild(this);
    });
  }
};
Ze([
  l({ type: String, attribute: "variant", reflect: !0 })
], ue.prototype, "variant", 2);
Ze([
  l({ type: String, attribute: "message" })
], ue.prototype, "message", 2);
ue = Ze([
  d("ui-alert")
], ue);
var Sr = Object.defineProperty, Lr = Object.getOwnPropertyDescriptor, Ie = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Lr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Sr(e, t, r), r;
};
let pe = class extends p {
  constructor() {
    super(...arguments), this.position = "top", this.fixed = !1;
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            :host {
                display: block;
                width: 100%;
                overflow: hidden;
                padding: calc(var(--ui-spacing) / 2);

                background-color: hsla(var(--ui-hsl-backdrop), var(--ui-hsl-backdrop-alpha));
                -webkit-backdrop-filter: var(--ui-backdropFilter);
                backdrop-filter: var(--ui-backdropFilter);
            }

            :host([position="top"]),
            :host([position="bottom"]) {
                z-index: 100;
                position: absolute !important;
                left: 0;
                right: 0;
                height: var(--ui-app-bar-height);
            }

            :host([position="top"]):host([fixed]),
            :host([position="bottom"]):host([fixed]) {
                position: fixed !important;
            }

            :host([position="top"]) {
                top: 0;
                border-bottom: 1px solid hsl(var(--ui-hsl-borderColor));
            }

            :host([position="bottom"]) {
                bottom: 0;
                border-top: 1px solid hsl(var(--ui-hsl-borderColor));
            }

            :host > ui-flex-grid-row {
                width: 100%;
                height: 100%;
                align-items: center;
                justify-content: space-between;
            }

            :host > ui-flex-grid-row > * {
                height: 100%;
            }

            :host > ui-flex-grid-row > *:nth-child(1),
            :host > ui-flex-grid-row > *:nth-child(3) {
                width: fit-content;
            }

            :host > ui-flex-grid-row > [slot="left"] {
                margin-left: 0 !important;
            }

            :host > ui-flex-grid-row > [slot="center"] {
                width: 100%;
            }

            :host > ui-flex-grid-row > [slot="right"] {
                margin-right: 0 !important;
                justify-content: flex-end;
            }
        `;
  }
  render() {
    return a`
            <ui-flex-grid-row gap="0.25rem">
                <ui-flex-grid-row gap="0.25rem" align="center">
                    <slot name="left"></slot>
                </ui-flex-grid-row>

                <ui-flex-grid-row gap="0.25rem" style="overflow: hidden;" align="center">
                    <slot name="center"></slot>
                </ui-flex-grid-row>

                <ui-flex-grid-row gap="0.25rem" align="center">
                    <slot name="right"></slot>
                </ui-flex-grid-row>
            </ui-flex-grid-row>
        `;
  }
  content(i) {
    return [...this.querySelectorAll(`[slot="${i}"]`)];
  }
  contentName(i) {
    return this.querySelector(`[name="${i}"]`);
  }
};
Ie([
  l({ type: String, attribute: "position", reflect: !0 })
], pe.prototype, "position", 2);
Ie([
  l({ type: Boolean, attribute: "fixed", reflect: !0 })
], pe.prototype, "fixed", 2);
pe = Ie([
  d("ui-app-bar")
], pe);
var Pr = Object.defineProperty, Or = Object.getOwnPropertyDescriptor, $t = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Or(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Pr(e, t, r), r;
};
let je = class extends p {
  constructor() {
    super(...arguments), this.name = "";
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            :host {
                display: var(--_display, contents);
                flex: 1;
            }

            ::slotted(*) {
                flex-grow: 1;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  content() {
    return [...this.children];
  }
  contentAt(i = 0) {
    return this.children[i];
  }
  show() {
    this.style.removeProperty("--_display");
  }
  hide() {
    this.style.setProperty("--_display", "none");
  }
};
$t([
  l({ type: String, attribute: "name", reflect: !0 })
], je.prototype, "name", 2);
je = $t([
  d("ui-app-bar-item")
], je);
var Mr = Object.defineProperty, jr = Object.getOwnPropertyDescriptor, ie = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? jr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Mr(e, t, r), r;
};
let D = class extends p {
  constructor() {
    super(...arguments), this.disabled = !1, this.ripple = !1, this.role = "button", this.rippleCleanUp = null;
  }
  static get styles() {
    return f`
            :host {
                display: inline-flex;
                align-items: center;
                justify-content: center;

                position: relative;

                padding: var(--ui-spacing) calc(var(--ui-spacing) * 2.5);

                outline: none;
                border: 1px solid currentColor;
                border-radius: var(--ui-radius);

                user-select: none;
                overflow: hidden;
                cursor: pointer;

                text-transform: capitalize;
                font-size: 1.1rem;
                font-weight: 450;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-button-fontVariation);
            }

            :host([variant="full"]) {
                border: none;
            }

            :host([variant="full"][color="primary"]) {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host([variant="full"][color="secondary"]) {
                background-color: hsl(var(--ui-hsl-secondary));
                color: hsl(var(--ui-hsl-secondary-text));
            }

            :host([variant="full"][color="destructive"]) {
                background-color: hsl(var(--ui-hsl-destructive));
                color: hsl(var(--ui-hsl-destructive-text));
            }

            :host([variant="outline"]) {
                border-color: currentColor;
                background-color: transparent;
            }

            :host([variant="outline"][color="primary"]) {
                color: hsl(var(--ui-hsl-primary));
            }

            :host([variant="outline"][color="secondary"]) {
                color: hsl(var(--ui-hsl-secondary));
            }

            :host([variant="outline"][color="destructive"]) {
                color: hsl(var(--ui-hsl-destructive));
            }

            :host([variant="ghost"]) {
                border-color: transparent;
                background-color: transparent;
                font-weight: 900;
            }

            :host([variant="ghost"][color="primary"]) {
                color: hsl(var(--ui-hsl-primary));
            }

            :host([variant="ghost"][color="secondary"]) {
                color: hsl(var(--ui-hsl-secondary));
            }

            :host([variant="ghost"][color="destructive"]) {
                color: hsl(var(--ui-hsl-destructive));
            }

            :host([disabled]),
            :host([disabled]:hover),
            :host([disabled]:active) {
                background-color: transparent;
                opacity: 0.25;
                cursor: default;
                pointer-events: none;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "ripple":
        this.rippleCleanUp !== null && (this.rippleCleanUp(), this.rippleCleanUp = null), t !== null && (this.rippleCleanUp = ye(this));
        break;
    }
  }
};
ie([
  l({ type: String, attribute: "color", reflect: !0 })
], D.prototype, "color", 2);
ie([
  l({ type: String, attribute: "variant", reflect: !0 })
], D.prototype, "variant", 2);
ie([
  l({ type: Boolean, attribute: "disabled" })
], D.prototype, "disabled", 2);
ie([
  l({ type: Boolean, attribute: "ripple" })
], D.prototype, "ripple", 2);
D = ie([
  d("ui-button")
], D);
var Er = Object.defineProperty, Ar = Object.getOwnPropertyDescriptor, oe = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Ar(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Er(e, t, r), r;
};
let G = class extends p {
  constructor() {
    super(...arguments), this.ghost = !1, this.disabled = !1, this.ripple = !1, this.role = "button", this.rippleCleanUp = null;
  }
  static get styles() {
    return f`
            :host {
                display: inline-flex;
                justify-content: center;
                align-items: center;
                position: relative;
                width: 2.5rem;
                height: 2.5rem;
                padding: calc(var(--ui-spacing) / 2);
                border: 1px solid currentColor;
                border-radius: var(--ui-radius);
                outline: none;
                overflow: hidden;
                cursor: pointer;
                user-select: none;
                font-size: 1.1rem;
                font-weight: 450;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-button-fontVariation);
                transition: color 0.5s linear;
            }

            :host([ghost]) {
                border-color: transparent !important;
                box-shadow: none;
                font-weight: 900;
            }

            :host([color="primary"]) {
                color: hsl(var(--ui-hsl-primary));
                border-color: hsl(var(--ui-hsl-primary));
            }

            :host([color="secondary"]) {
                color: hsl(var(--ui-hsl-secondary));
                border-color: hsl(var(--ui-hsl-secondary));
            }

            :host([color="destructive"]) {
                color: hsl(var(--ui-hsl-destructive));
                border-color: hsl(var(--ui-hsl-destructive));
            }

            /* :disabled */

            :host([disabled]),
            :host([disabled]:hover),
            :host([disabled]:active) {
                opacity: 0.25;
                cursor: default;
                pointer-events: none;
            }

            ui-svg {
                display: flex;
                align-items: center;
                justify-content: center;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "ripple":
        this.rippleCleanUp !== null && (this.rippleCleanUp(), this.rippleCleanUp = null), t !== null && (this.rippleCleanUp = ye(this));
        break;
    }
  }
};
oe([
  l({ type: String, attribute: "color", reflect: !0 })
], G.prototype, "color", 2);
oe([
  l({ type: Boolean, attribute: "ghost" })
], G.prototype, "ghost", 2);
oe([
  l({ type: Boolean, attribute: "disabled" })
], G.prototype, "disabled", 2);
oe([
  l({ type: Boolean, attribute: "ripple" })
], G.prototype, "ripple", 2);
G = oe([
  d("ui-icon-button")
], G);
var Rr = Object.defineProperty, Dr = Object.getOwnPropertyDescriptor, me = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Dr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Rr(e, t, r), r;
};
let Q = class extends p {
  constructor() {
    super(...arguments), this.title = "", this.fullscreen = "", this.noFooter = "";
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            dialog {
                z-index: 998; /* UIAlerts z-index is 999 */

                position: fixed !important;
                top: 50%;
                left: 50%;

                max-width: 100%;
                max-height: 100%;

                margin: 0;
                padding: 0;

                border: none;
                outline: none;

                background-color: transparent;

                transform: translate(-50%, -50%);

                /* Remove Scrollbar */
                -ms-overflow-style: none;
                scrollbar-width: none;
                scroll-behavior: smooth;
            }

            /* Remove Scrollbar */
            dialog::-webkit-scrollbar {
                display: none;
            }

            dialog::backdrop {
                background-color: hsla(var(--ui-hsl-backdrop), var(--ui-hsl-backdrop-alpha));
                -webkit-backdrop-filter: var(--ui-backdropFilter);
                backdrop-filter: var(--ui-backdropFilter);
            }

            :host([fullscreen]) dialog {
                width: 100%;
                height: 100%;
            }

            dialog > .container {
                background-color: hsl(var(--ui-hsl-bg));
                color: hsl(var(--ui-hsl-text));

                border: 1px solid hsl(var(--ui-hsl-borderColor));
                border-radius: var(--ui-radius);

                padding: var(--ui-spacing);

                display: flex;
                flex-direction: column;
                justify-content: space-between;

                position: relative;
            }

            :host([fullscreen]) dialog > .container {
                width: calc(100% - var(--ui-spacing) * 2);
                height: calc(100% - var(--ui-spacing) * 2);

                margin: var(--ui-spacing);
            }

            /*
             * Header Styles
             */

            .header {
                display: flex;
                align-items: center;
                justify-content: space-between;

                border-top-right-radius: var(--ui-radius);
                border-top-left-radius: var(--ui-radius);

                width: 100%;
                height: var(--ui-dialog-header-height);
            }

            .header [name="title"] {
                margin: auto 0;
                white-space: nowrap;
            }

            :host([fullscreen]) .header {
                z-index: 15;
                position: absolute;
                top: var(--ui-spacing);
                right: var(--ui-spacing);
                left: var(--ui-spacing);
                width: calc(100% - var(--ui-spacing) * 2);
            }

            /*
             * Content Styles
             */

            .content {
                padding: var(--ui-spacing);
                height: fit-content;
                min-width: fit-content;
                width: 100%;
            }

            :host([fullscreen]) .content {
                z-index: 10;
                position: absolute;
                top: calc(var(--ui-dialog-header-height) + var(--ui-spacing));
                bottom: calc(var(--ui-dialog-footer-height) + var(--ui-spacing));
                right: var(--ui-spacing);
                left: var(--ui-spacing);
                padding: unset;
                height: unset;
                width: unset;
                min-width: unset;
            }

            :host([no-footer]) .content {
                bottom: var(--ui-spacing);
            }

            /*
             * Footer Styles
             */

            .footer {
                margin-top: var(--ui-spacing);
                border-bottom-right-radius: var(--ui-radius);
                border-bottom-left-radius: var(--ui-radius);

                width: 100%;
                height: var(--ui-dialog-footer-height);
            }

            :host([fullscreen]) .footer {
                z-index: 15;
                position: absolute;
                right: var(--ui-spacing);
                bottom: var(--ui-spacing);
                left: var(--ui-spacing);
                width: calc(100% - var(--ui-spacing) * 2);
            }

            :host([no-footer]) .footer {
                display: none;
            }

            .footer ui-flex-grid-row {
                height: 100%;
                flex-wrap: nowrap;
                justify-content: flex-end;
                align-items: center;
            }
        `;
  }
  render() {
    return a`
            <dialog
                @cancel=${(i) => {
      i.preventDefault();
    }}
            >
                <div class="container">
                    <div class="header">
                        <h3 name="title">${this.title}</h3>

                        <ui-icon-button
                            style="width: var(--ui-dialog-header-height); height: 100%;"
                            ghost
                            @click=${() => {
      this.close();
    }}
                        >
                            ${Ct}
                        </ui-icon-button>
                    </div>

                    <div class="content">
                        <slot></slot>
                    </div>

                    <div class="footer">
                        <ui-flex-grid-row gap="calc(var(--ui-spacing) / 2)">
                            <slot name="actions"></slot>
                        </ui-flex-grid-row>
                    </div>
                </div>
            </dialog>
        `;
  }
  open(i) {
    const e = this.shadowRoot.querySelector("dialog"), t = e.inert;
    e.inert = (i == null ? void 0 : i.inert) === void 0 ? !0 : i.inert, i != null && i.modal ? e.showModal() : e.show(), e.inert = t, this.dispatchEvent(new Event("open"));
  }
  close() {
    this.dispatchEvent(new Event("close")), this.shadowRoot.querySelector("dialog").close();
  }
  addDialogActionButton(i, e) {
    const t = new fe();
    t.flex = (e == null ? void 0 : e.flex) || 1, t.slot = "actions", this.appendChild(t);
    let o = new D();
    return o.innerHTML = i, o.variant = e == null ? void 0 : e.variant, o.color = e == null ? void 0 : e.color, o.onclick = (e == null ? void 0 : e.onClick) || null, t.appendChild(o), o;
  }
};
me([
  l({ type: String, attribute: "title", reflect: !0 })
], Q.prototype, "title", 2);
me([
  l({ type: Boolean, attribute: "fullscreen", reflect: !0 })
], Q.prototype, "fullscreen", 2);
me([
  l({ type: Boolean, attribute: "no-footer", reflect: !0 })
], Q.prototype, "noFooter", 2);
Q = me([
  d("ui-dialog")
], Q);
var Vr = Object.defineProperty, Ur = Object.getOwnPropertyDescriptor, _e = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Ur(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Vr(e, t, r), r;
};
let T = class extends p {
  constructor() {
    super(...arguments), this.title = "&nbsp;", this.open = !1, this.noFold = !1;
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            ul {
                margin: 0;
                list-style: none;
                padding: var(--ui-spacing);
                overflow: hidden;
            }

            ul .fold {
                display: flex;
                position: relative;
                border-radius: var(--ui-radius);
                cursor: pointer;
            }

            ul :host([no-fold]) .fold {
                display: none;
            }

            ul .fold .icon {
                transition: transform 0.25s ease;
                display: flex;
                justify-content: center;
                align-items: center;
            }

            :host(:not([open])) ul .fold .icon {
                transform: rotate(-90deg);
            }

            :host(:not([open])):host(:not([no-fold])) ::slotted(*) {
                display: none !important;
            }
        `;
  }
  render() {
    return a`
            <ul>
                <ui-drawer-group-item
                    class="fold"
                    role="button"
                    @click=${async () => {
      this.open = !this.open, setTimeout(() => {
        this.open ? this.dispatchEvent(new Event("unfold")) : this.dispatchEvent(new Event("fold"));
      });
    }}
                >
                    <ui-flex-grid-row>
                        <ui-flex-grid-item>
                            <h3>${this.title}</h3>
                        </ui-flex-grid-item>

                        <ui-flex-grid-item class="icon" flex="0">
                            <ui-svg style="width: 2.5rem; height: 2.5rem;">
                                ${Te}
                            </ui-svg>
                        </ui-flex-grid-item>
                    </ui-flex-grid-row>
                </ui-drawer-group-item>

                <slot></slot>
            </ul>
        `;
  }
};
_e([
  l({ type: String, attribute: "title", reflect: !0 })
], T.prototype, "title", 2);
_e([
  l({ type: Boolean, attribute: "open", reflect: !0 })
], T.prototype, "open", 2);
_e([
  l({ type: Boolean, attribute: "no-fold", reflect: !0 })
], T.prototype, "noFold", 2);
T = _e([
  d("ui-drawer-group")
], T);
var Br = Object.defineProperty, Hr = Object.getOwnPropertyDescriptor, ze = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Hr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Br(e, t, r), r;
};
let de = class extends p {
  constructor() {
    super(...arguments), this.open = !1, this.handleUnfold = (i) => {
      i.currentTarget.scrollIntoView(!0);
    };
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            :host {
                display: block;

                position: fixed !important;
                z-index: 150;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;

                overflow: hidden;

                transition: left 0s ease 0.5s;
            }

            :host([open]) {
                left: 0;
                transition: none;
            }

            aside {
                position: absolute;
                z-index: 150;
                top: 0;
                left: -100%;
                width: var(--_width, fit-content);
                max-width: calc(100% - 2.5rem);
                height: 100%;

                overflow-x: hidden;
                overflow-y: scroll;

                border-right: 1px solid hsl(var(--ui-hsl-card-borderColor));

                transition: left 0.5s ease;

                /* Remove Scrollbar */
                -ms-overflow-style: none;
                scrollbar-width: none;
                scroll-behavior: smooth;

                /* Backdrop Blur */
                background-color: hsla(var(--ui-hsl-backdrop), var(--ui-hsl-backdrop-alpha));
                -webkit-backdrop-filter: var(--ui-backdropFilter);
                backdrop-filter: var(--ui-backdropFilter);
            }

            aside::-webkit-scrollbar {
                display: none;
            }

            :host([open]) aside {
                left: 0;
            }
        `;
  }
  render() {
    return a`
            <aside
                @click=${(i) => {
      i.stopPropagation();
    }}
            >
                <slot></slot>
            </aside>
        `;
  }
  firstUpdated(i) {
    this.setAttribute("role", "button"), this.classList.add("has-backdrop-blur"), this.addEventListener("click", () => {
      this.open = !1;
    });
  }
  updated(i) {
    [...this.children].forEach(async (e) => {
      e instanceof T && e.addEventListener("unfold", this.handleUnfold);
    });
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "width":
        t !== null ? this.style.setProperty("--_width", t) : this.style.removeProperty("--_width");
        break;
      case "open":
        t !== null ? (history.pushState(null, "ui-drawer", location.href), this.dispatchEvent(new Event("open"))) : this.dispatchEvent(new Event("close"));
        break;
    }
  }
};
ze([
  l({ type: String, attribute: "width", reflect: !0 })
], de.prototype, "width", 2);
ze([
  l({ type: Boolean, attribute: "open", reflect: !0 })
], de.prototype, "open", 2);
de = ze([
  d("ui-drawer")
], de);
var Gr = Object.defineProperty, Tr = Object.getOwnPropertyDescriptor, Zr = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Tr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Gr(e, t, r), r;
};
let nt = class extends p {
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            :host {
                display: block;
                width: 100%;
            }

            li {
                display: flex;
                flex-direction: row;
                flex-wrap: nowrap;

                width: 100%;

                padding: var(--ui-spacing) calc(var(--ui-spacing) * 1.5);
            }

            ::slotted(*) {
                width: 100%;
            }
        `;
  }
  render() {
    return a`<li><slot></slot></li>`;
  }
};
nt = Zr([
  d("ui-drawer-group-item")
], nt);
var Ir = Object.defineProperty, zr = Object.getOwnPropertyDescriptor, kt = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? zr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Ir(e, t, r), r;
};
const Pe = 1;
let fe = class extends p {
  constructor() {
    super(...arguments), this.flex = Pe;
  }
  static get styles() {
    return f`
            :host {
                flex: var(--_flex, ${Pe});
                display: flex;
            }

            ::slotted(*) {
                flex-grow: 1;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "flex":
        this.style.setProperty("--_flex", t || Pe.toString());
        break;
    }
  }
};
kt([
  l({ type: Number, attribute: "flex" })
], fe.prototype, "flex", 2);
fe = kt([
  d("ui-flex-grid-item")
], fe);
var Nr = Object.defineProperty, Fr = Object.getOwnPropertyDescriptor, se = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Fr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Nr(e, t, r), r;
};
const lt = "0";
let Z = class extends p {
  constructor() {
    super(...arguments), this.gap = lt;
  }
  static get styles() {
    return f`
            :host {
                display: flex;
                flex-flow: row var(--_wrap, nowrap);
                justify-content: var(--_justify);
                align-items: var(--_align);

                width: 100%;
            }

            :host > ::slotted(*) {
                margin: 0 var(--_gap, 0) !important;
            }

            :host > ::slotted(*:first-child) {
                margin-left: 0 !important;
            }

            :host > ::slotted(*:last-child) {
                margin-right: 0 !important;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "gap":
        t ? this.style.setProperty("--_gap", t || lt) : this.style.removeProperty("--_gap");
        break;
      case "justify":
        t ? this.style.setProperty("--_justify", t || "") : this.style.removeProperty("--_justify");
        break;
      case "align":
        t ? this.style.setProperty("--_align", t || "") : this.style.removeProperty("--_align");
        break;
      case "wrap":
        t ? this.style.setProperty("--_wrap", t || "") : this.style.removeProperty("--_wrap");
        break;
    }
  }
};
se([
  l({ type: String, attribute: "gap" })
], Z.prototype, "gap", 2);
se([
  l({ type: String, attribute: "justify" })
], Z.prototype, "justify", 2);
se([
  l({ type: String, attribute: "align" })
], Z.prototype, "align", 2);
se([
  l({ type: String, attribute: "wrap" })
], Z.prototype, "wrap", 2);
Z = se([
  d("ui-flex-grid-row")
], Z);
var qr = Object.defineProperty, Yr = Object.getOwnPropertyDescriptor, ne = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Yr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && qr(e, t, r), r;
};
const at = "0";
let I = class extends p {
  constructor() {
    super(...arguments), this.gap = at;
  }
  static get styles() {
    return f`
            :host {
                display: flex;
                flex-flow: column var(--_wrap, nowrap);
                justify-content: var(--_justify);
                align-items: var(--_align);

                position: relative;
                width: 100%;
                height: fit-content;
            }

            :host > ::slotted(*) {
                margin: var(--_gap, 0) 0 !important;
            }

            :host > ::slotted(*:first-child) {
                margin-top: 0 !important;
            }

            :host > ::slotted(*:last-child) {
                margin-bottom: 0 !important;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "gap":
        t ? this.style.setProperty("--_gap", t || at) : this.style.removeProperty("--_gap");
        break;
      case "justify":
        t ? this.style.setProperty("--_justify", t || "") : this.style.removeProperty("--_justify");
        break;
      case "align":
        t ? this.style.setProperty("--_align", t || "") : this.style.removeProperty("--_align");
        break;
      case "wrap":
        t ? this.style.setProperty("--_wrap", t || "") : this.style.removeProperty("--_wrap");
        break;
    }
  }
};
ne([
  l({ type: String, attribute: "gap" })
], I.prototype, "gap", 2);
ne([
  l({ type: String, attribute: "justify" })
], I.prototype, "justify", 2);
ne([
  l({ type: String, attribute: "align" })
], I.prototype, "align", 2);
ne([
  l({ type: String, attribute: "wrap" })
], I.prototype, "wrap", 2);
I = ne([
  d("ui-flex-grid")
], I);
var Xr = Object.defineProperty, Wr = Object.getOwnPropertyDescriptor, St = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Wr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Xr(e, t, r), r;
};
let Ee = class extends p {
  constructor() {
    super(...arguments), this.checked = !1;
  }
  static get styles() {
    return f`
            :host {
                border-radius: var(--ui-radius);
            }

            input {
                display: inline-block;

                height: 1.5rem;
                width: 1.5rem;

                padding: var(--ui-spacing) calc(var(--ui-spacing) * 2);

                border: 1px solid hsl(var(--ui-hsl-primary));
                border-radius: var(--ui-radius);

                accent-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-text));
                background-color: transparent;

                box-shadow: none;
                outline: none;
                cursor: pointer;

                transition: border-color 0.25s linear;
            }

            input:disabled {
                cursor: default;
                user-select: none;
            }
        `;
  }
  render() {
    return this.setAttribute("role", "checkbox"), a`
            <input
                type="checkbox"
                ?checked=${this.checked}

                @input=${() => {
      this.checked = !this.checked;
    }}

                @change=${() => {
      this.dispatchEvent(new Event("change", {}));
    }}
            ></input>
        `;
  }
  click() {
    super.click(), this.shadowRoot.querySelector("input").checked = this.checked = !this.checked;
  }
};
St([
  l({ type: Boolean, attribute: "checked", reflect: !0 })
], Ee.prototype, "checked", 2);
Ee = St([
  d("ui-check")
], Ee);
var Kr = Object.defineProperty, Jr = Object.getOwnPropertyDescriptor, j = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Jr(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Kr(e, t, r), r;
};
let $ = class extends p {
  constructor() {
    super(...arguments), this.title = "", this.type = "", this.value = "", this.placeholder = "", this.invalid = !1, this.min = "", this.max = "";
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            ::selection {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host {
                display: block;

                position: relative;
                width: 100%;
                height: fit-content;

                border-radius: var(--ui-radius);
            }

            .container {
                width: 100%;

                border: 1px solid hsl(var(--ui-hsl-borderColor));
                border-radius: var(--ui-radius);

                transition: border-color 0.25s linear;
            }

            .container:has(input:focus) {
                border-color: hsl(var(--ui-hsl-primary));
            }

            :host([invalid]) .container {
                border-color: hsl(var(--ui-hsl-destructive));
            }

            ui-secondary.title {
                display: block;
                padding: 0 var(--ui-spacing);
                font-size: 0.85rem;
            }

            input {
                display: block;

                width: 100%;

                margin: 0;
                padding: var(--ui-spacing) calc(var(--ui-spacing) * 2);

                accent-color: hsl(var(--ui-hsl-primary));
                background-color: transparent;
                color: hsl(var(--ui-hsl-input-text));

                outline: none;
                border: none;
                border-radius: inherit;

                font-size: 0.95rem;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-input-fontVariation);
            }

            ui-secondary.title ~ input {
                padding-top: 0;
            }
        `;
  }
  render() {
    return this.setAttribute("role", "checkbox"), a`
            <div class="container">
                ${this.title ? a` <ui-secondary class="title"> ${this.title} </ui-secondary> ` : ""}
                <input
                    type="${this.type}"
                    value="${this.value}"
                    placeholder="${this.placeholder}"
                    min="${this.min}"
                    max="${this.max}"
                    @input=${(i) => {
      this.value = i.currentTarget.value;
    }}
                    @change=${() => {
      this.dispatchEvent(new Event("change"));
    }}
                />
            </div>
        `;
  }
  focus(i) {
    super.focus(i), this.shadowRoot.querySelector("input").focus(i);
  }
  blur() {
    super.blur(), this.shadowRoot.querySelector("input").blur();
  }
  click() {
    super.click(), this.focus();
  }
};
j([
  l({ type: String, attribute: "title", reflect: !0 })
], $.prototype, "title", 2);
j([
  l({ type: String, attribute: "type", reflect: !0 })
], $.prototype, "type", 2);
j([
  l({ type: String, attribute: "value" })
], $.prototype, "value", 2);
j([
  l({ type: String, attribute: "placeholder", reflect: !0 })
], $.prototype, "placeholder", 2);
j([
  l({ type: Boolean, attribute: "invalid", reflect: !0 })
], $.prototype, "invalid", 2);
j([
  l({ type: String, attribute: "min", reflect: !0 })
], $.prototype, "min", 2);
j([
  l({ type: String, attribute: "max", reflect: !0 })
], $.prototype, "max", 2);
$ = j([
  d("ui-input")
], $);
var Qr = Object.defineProperty, ei = Object.getOwnPropertyDescriptor, S = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? ei(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Qr(e, t, r), r;
};
let C = class extends p {
  constructor() {
    super(...arguments), this.title = "", this.value = "", this.placeholder = "", this.invalid = !1, this.noSubmit = !1, this.storage = !1, this.storagePrefix = "", this.storageKey = "";
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            ::selection {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host {
                display: block;

                position: relative;
                width: 100%;
                height: fit-content;
            }

            .container {
                position: relative;
                width: 100%;

                border: none;
                border: 1px solid hsl(var(--ui-hsl-borderColor));
                border-radius: var(--ui-radius);

                transition: border-color 0.25s linear;
            }

            .container:has(input:focus) {
                border-color: hsl(var(--ui-hsl-primary));
            }

            :host([invalid]) .container {
                border-color: hsl(var(--ui-hsl-destructive));
            }

            ui-secondary.title {
                display: block;
                margin-right: 2.5rem;
                padding: 0 var(--ui-spacing);
                font-size: 0.85rem;
            }

            input {
                display: block;

                width: 100%;

                margin: 0;
                padding: var(--ui-spacing) calc(var(--ui-spacing) * 2);

                accent-color: hsl(var(--ui-hsl-primary));
                background-color: transparent;
                color: hsl(var(--ui-hsl-input-text));

                outline: none;
                border: none;
                border-radius: inherit;

                font-size: 0.9rem;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-input-fontVariation);
            }

            ui-secondary.title ~ input {
                padding-top: 0;
            }

            :host(:not([no-submit])) input {
                width: calc(100% - 2rem);
            }

            ui-icon-button {
                position: absolute;
                top: 0;
                right: 0;
                height: 100%;

                display: flex;
                justify-content: center;
                align-items: center;

                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }

            :host([no-submit]) ui-icon-button {
                display: none;
            }
        `;
  }
  render() {
    this.setAttribute("role", "search"), console.debug(`[ui][ui-search] Render component with value "${this.value}"`);
    let i = null;
    return a`
            <div class="container has-backdrop-blur">
                ${this.title ? a`<ui-secondary class="title"> ${this.title} </ui-secondary>` : ""}

                <input
                    name="search"
                    type="search"
                    ?value="${this.value}"
                    @keydown=${(e) => {
      var t, o;
      this.noSubmit || e.key !== "Enter" || (o = (t = this.shadowRoot) == null ? void 0 : t.querySelector('ui-icon-button[name="submit"]')) == null || o.click();
    }}
                    @input=${(e) => {
      this.value = e.currentTarget.value, this.storage && (i !== null && clearTimeout(i), i = setTimeout(() => {
        localStorage.setItem(this.storagePrefix + this.storageKey, this.value), i = null;
      }, 250));
    }}
                    @change=${() => {
      this.dispatchEvent(new Event("change"));
    }}
                />

                <ui-icon-button
                    name="submit"
                    for="search"
                    ghost
                    ripple
                    @click=${() => {
      this.dispatchEvent(new Event("submit"));
    }}
                >
                    ${xt}
                </ui-icon-button>
            </div>
        `;
  }
  firstUpdated(i) {
    if (super.firstUpdated(i), !this.value && this.storage) {
      const e = localStorage.getItem(this.storagePrefix + this.storageKey) || "";
      this.value = e, this.dispatchEvent(new Event("storage"));
    }
  }
  focus(i) {
    super.focus(i), this.shadowRoot.querySelector("input").focus(i);
  }
  blur() {
    super.blur(), this.shadowRoot.querySelector("input").blur();
  }
  click() {
    super.click(), this.focus();
  }
};
S([
  l({ type: String, attribute: "title", reflect: !0 })
], C.prototype, "title", 2);
S([
  l({ type: String, attribute: "value" })
], C.prototype, "value", 2);
S([
  l({ type: String, attribute: "placeholder", reflect: !0 })
], C.prototype, "placeholder", 2);
S([
  l({ type: Boolean, attribute: "invalid", reflect: !0 })
], C.prototype, "invalid", 2);
S([
  l({ type: Boolean, attribute: "no-submit", reflect: !0 })
], C.prototype, "noSubmit", 2);
S([
  l({ type: Boolean, attribute: "storage", reflect: !0 })
], C.prototype, "storage", 2);
S([
  l({ type: String, attribute: "storage-prefix", reflect: !0 })
], C.prototype, "storagePrefix", 2);
S([
  l({ type: String, attribute: "storage-key", reflect: !0 })
], C.prototype, "storageKey", 2);
C = S([
  d("ui-search")
], C);
var ti = Object.defineProperty, ri = Object.getOwnPropertyDescriptor, Ne = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? ri(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ti(e, t, r), r;
};
let z = class extends p {
  constructor() {
    super(...arguments), this.value = "", this.selected = !1;
  }
  static get styles() {
    return f`
            :host {
                display: none;
                align-items: center;

                padding: var(--ui-spacing);
                padding-right: 2.5rem;

                height: calc(1em * var(--ui-lineHeight) + var(--ui-spacing) * 2);

                font-variation-settings: var(--ui-input-fontVariation);
                color: hsl(var(--ui-hsl-input-text));

                white-space: nowrap;
                text-overflow: ellipsis;

                overflow: hidden;

                transition:
                    background-color 0.25s linear,
                    color 0.25s linear;
            }
        `;
  }
  render() {
    return this.setAttribute("role", "button"), a`<slot></slot>`;
  }
};
Ne([
  l({ type: String, attribute: "value", reflect: !0 })
], z.prototype, "value", 2);
Ne([
  l({ type: Boolean, attribute: "selected", reflect: !0 })
], z.prototype, "selected", 2);
z = Ne([
  d("ui-select-option")
], z);
var ii = Object.defineProperty, oi = Object.getOwnPropertyDescriptor, Fe = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? oi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ii(e, t, r), r;
};
let ge = class extends p {
  constructor() {
    super(...arguments), this.open = !1, this.keepOpen = !1;
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            :host {
                --ui-bg: "transparent";

                position: relative;
                display: block;

                width: 100%;
                height: calc(1em * var(--ui-lineHeight) + var(--ui-spacing) * 2);
                transition: height 0.25s ease;

                background-color: transparent;

                border: 1px solid hsl(var(--ui-hsl-borderColor));
                border-radius: var(--ui-radius);

                line-height: 1.15;

                overflow: hidden;

                font-size: 0.9rem;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-input-fontVariation);
            }

            :host([open]),
            :host([keep-open]) {
                height: calc((1em * var(--ui-lineHeight) + var(--ui-spacing) * 2) * var(--_items));
            }

            :host(:not([open])) .options:has(> ::slotted(ui-select-option[selected])),
            :host(:not([keep-open])) .options:has(> ::slotted(ui-select-option[selected])) {
                display: block;
            }

            .options {
                cursor: pointer;
                display: none;
                display: flex;
                flex-direction: column;
                min-height: 100%;
            }

            :host([open]) .options,
            :host([keep-open]) .options {
                display: block;
            }

            .icon {
                display: flex;
                justify-content: center;
                align-items: center;
                position: absolute;
                top: 0;
                right: 0;
                width: 2.5rem;
                height: 100%;
                padding: 0.25rem;
                color: hsl(var(--ui-hsl-primary));
            }

            .icon > * {
                width: 2rem;
                height: 2rem;
            }

            :host([open]) .icon,
            :host([keep-open]) .icon {
                display: none;
            }

            ::slotted(ui-select-option) {
                display: flex;
            }

            :host([open]) ::slotted(ui-select-option[selected]),
            :host([keep-open]) ::slotted(ui-select-option[selected]) {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host([open]) ::slotted(ui-select-option:not([selected]):hover),
            :host([keep-open]) ::slotted(ui-select-option:not([selected]):hover) {
                background-color: hsla(var(--ui-hsl-text), 0.1);
            }

            :host(:not([open], [keep-open])) ::slotted(ui-select-option:not([selected])) {
                display: none;
            }
        `;
  }
  render() {
    !this.open && !this.keepOpen ? this.setAttribute("role", "button") : this.removeAttribute("role");
    const i = this.optionsClickHandler.bind(this);
    return a`
            <div
                class="options"
                @click=${async (e) => {
      if (this.keepOpen) return await i(e);
      this.open = !this.open, this.open ? (e.stopPropagation(), this.addEventListener("click", i)) : this.removeEventListener("click", i);
    }}
            >
                <div class="icon">
                    <ui-svg>${Te}</ui-svg>
                </div>

                <slot></slot>
            </div>
        `;
  }
  updated(i) {
    console.debug("[ui][ui-select] updated", this.children.length), this.style.setProperty("--_items", `${this.children.length}`);
  }
  async optionsClickHandler(i) {
    i.composedPath().forEach((e) => {
      e instanceof z && ([...this.querySelectorAll("ui-select-option")].forEach(
        (t) => t.removeAttribute("selected")
      ), e.setAttribute("selected", ""), this.dispatchEvent(new Event("change")));
    });
  }
  options() {
    return [...this.children].filter((i) => i instanceof z);
  }
  selected() {
    return this.options().find((i) => i.selected) || null;
  }
  click() {
    super.click(), this.shadowRoot.querySelector("div.options").click();
  }
};
Fe([
  l({ type: Boolean, attribute: "open", reflect: !0 })
], ge.prototype, "open", 2);
Fe([
  l({ type: Boolean, attribute: "keep-open", reflect: !0 })
], ge.prototype, "keepOpen", 2);
ge = Fe([
  d("ui-select")
], ge);
/**
 * @license
 * Copyright 2018 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
const ct = (i) => i ?? y;
var si = Object.defineProperty, ni = Object.getOwnPropertyDescriptor, V = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? ni(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && si(e, t, r), r;
};
let M = class extends p {
  constructor() {
    super(...arguments), this.title = "", this.value = "", this.placeholder = "", this.invalid = !1;
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            ::selection {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host {
                display: block;
                position: relative;
                width: 100%;
                height: fit-content;
            }

            .container {
                width: 100%;
                height: 100%;
                border: none;
                border: 1px solid hsl(var(--ui-hsl-borderColor));
                border-radius: var(--ui-radius);
                transition: border-color 0.25s linear;
            }

            .container:has(textarea:focus) {
                border-color: hsl(var(--ui-hsl-primary));
            }

            :host([invalid]) .container {
                border-color: hsl(var(--ui-hsl-destructive));
            }

            ui-secondary.title {
                display: block;
                padding: 0 var(--ui-spacing);
                user-select: none;
                transform: translateY(calc(var(--ui-spacing) / 2));
            }

            textarea {
                resize: none;
                width: 100%;
                display: block;
                margin: 0;
                padding: var(--ui-spacing) calc(var(--ui-spacing) * 2);
                border: none;
                border-radius: inherit;
                outline: none;
                font-size: 0.9rem;
                font-family: var(--ui-fontFamily);
                font-variation-settings: var(--ui-input-fontVariation);
                accent-color: hsl(var(--ui-hsl-primary));
                background-color: transparent;
                color: hsl(var(--ui-hsl-input-text));
            }
        `;
  }
  render() {
    return a`
            <div class="container">
                ${this.title ? a` <ui-secondary class="title"> ${this.title} </ui-secondary> ` : ""}

                <textarea
                    placeholder=${this.placeholder}
                    .value=${this.value}
                    rows=${ct(this.rows)}
                    cols=${ct(this.cols)}
                    @input=${(i) => {
      this.value = i.currentTarget.value;
    }}
                    @change=${() => {
      this.dispatchEvent(new Event("change"));
    }}
                ></textarea>
            </div>
        `;
  }
  focus(i) {
    super.focus(i), this.shadowRoot.querySelector("textarea").focus(i);
  }
  blur() {
    super.blur(), this.shadowRoot.querySelector("textarea").blur();
  }
  click() {
    super.click(), this.focus();
  }
};
V([
  l({ type: String, attribute: "title", reflect: !0 })
], M.prototype, "title", 2);
V([
  l({ type: String, attribute: "value" })
], M.prototype, "value", 2);
V([
  l({ type: String, attribute: "placeholder", reflect: !0 })
], M.prototype, "placeholder", 2);
V([
  l({ type: Boolean, attribute: "invalid", reflect: !0 })
], M.prototype, "invalid", 2);
V([
  l({ type: Number, attribute: "rows", reflect: !0 })
], M.prototype, "rows", 2);
V([
  l({ type: Number, attribute: "cols", reflect: !0 })
], M.prototype, "cols", 2);
M = V([
  d("ui-textarea")
], M);
var li = Object.defineProperty, ai = Object.getOwnPropertyDescriptor, Lt = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? ai(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && li(e, t, r), r;
};
let Ae = class extends p {
  constructor() {
    super(...arguments), this.data = {}, this.events = new Ve(), this.current = "";
  }
  static get styles() {
    return f`
            :host {
                display: none;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "current":
        this.setCurrent(t || "");
        break;
    }
  }
  fallback() {
    return this.querySelector("ui-lang-type[fallback]");
  }
  get(i, e) {
    var t, o;
    return ((o = (t = this.data) == null ? void 0 : t[i]) == null ? void 0 : o[e]) || null;
  }
  async setCurrent(i) {
    const e = (i !== "" ? this.querySelector(`ui-lang-type[name="${i}"]`) : this.fallback()) || this.fallback();
    if (e) {
      if (!e.href) throw "Missing href attribute!";
      try {
        this.data = await (await fetch(e.href)).json();
      } catch (t) {
        console.error(t);
      }
      this.events.dispatch("change", e);
    }
  }
};
Lt([
  l({ type: String, attribute: "current", reflect: !0 })
], Ae.prototype, "current", 2);
Ae = Lt([
  d("ui-lang")
], Ae);
var ci = Object.defineProperty, hi = Object.getOwnPropertyDescriptor, we = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? hi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ci(e, t, r), r;
};
let ee = class extends p {
  constructor() {
    super(...arguments), this.name = "", this.href = "", this.fallback = !1;
  }
  static get styles() {
    return f`
            :host {
                display: none;
            }
        `;
  }
};
we([
  l({ type: String, attribute: "name", reflect: !0 })
], ee.prototype, "name", 2);
we([
  l({ type: String, attribute: "href", reflect: !0 })
], ee.prototype, "href", 2);
we([
  l({ type: Boolean, attribute: "fallback", reflect: !0 })
], ee.prototype, "fallback", 2);
ee = we([
  d("ui-lang-type")
], ee);
var ui = Object.defineProperty, pi = Object.getOwnPropertyDescriptor, Pt = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? pi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ui(e, t, r), r;
};
let Re = class extends p {
  constructor() {
    super(...arguments), this.nobg = !1;
  }
  static get styles() {
    return f`
            :host {
                position: absolute !important;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;
            }

            .background {
                display: "block";

                z-index: 999;
                position: absolute;
                top: 0;
                right: 0;
                bottom: 0;
                left: 0;

                background-color: hsla(var(--ui-hsl-backdrop), var(--ui-hsl-backdrop-alpha));
                -webkit-backdrop-filter: var(--ui-backdropFilter);
                backdrop-filter: var(--ui-backdropFilter);
            }

            :host([nobg]) .background {
                display: none;
            }

            .spinner {
                content: "";
                box-sizing: border-box;

                z-index: 1000;
                position: absolute;
                top: 50%;
                left: 50%;
                width: 2.5rem;
                height: 2.5rem;

                margin-top: -1.25rem;
                margin-left: -1.25rem;

                border: 2px solid hsl(var(--ui-hsl-borderColor));
                border-top-color: hsl(var(--ui-hsl-primary));
                border-radius: 50%;

                animation: spinner 0.6s linear infinite;
            }

            @keyframes spinner {
                to {
                    transform: rotate(360deg);
                }
            }
        `;
  }
  render() {
    return a`
            <div class="background"></div>
            <div class="spinner"></div>
        `;
  }
};
Pt([
  l({ type: Boolean, attribute: "nobg", reflect: !0 })
], Re.prototype, "nobg", 2);
Re = Pt([
  d("ui-spinner")
], Re);
var di = Object.defineProperty, fi = Object.getOwnPropertyDescriptor, gi = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? fi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && di(e, t, r), r;
};
let ht = class extends p {
  constructor() {
    super(...arguments), this.events = new Ve(), this.stack = [], this.onpopstate = () => {
      if (this.stack.length === 0) {
        this.dispatchChangeEvent(null);
        return;
      }
      const i = this.removeChild(this.stack.pop());
      this.stack.length > 0 && (this.stack[this.stack.length - 1].parentElement || this.appendChild(this.stack[this.stack.length - 1])), this.dispatchChangeEvent(i);
    }, this.pages = {}, this.lockNavigation = !1;
  }
  static get styles() {
    return f`
            :host {
                display: block;
                position: relative;
                width: 100%;
                height: 100%;
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  connectedCallback() {
    super.connectedCallback(), window.addEventListener("popstate", this.onpopstate);
  }
  disconnectedCallback() {
    super.disconnectedCallback(), window.removeEventListener("popstate", this.onpopstate);
  }
  stackSize() {
    return this.stack.length;
  }
  clear() {
    for (; this.stack.length > 0; )
      this.removeChild(this.stack.pop());
  }
  goBack() {
    this.stack.length === 0 || this.lockNavigation || history.back();
  }
  register(i, e) {
    this.pages[i] = e;
  }
  unregister(i) {
    delete this.pages[i];
  }
  async set(i, e = null, t = !1) {
    var s;
    if (this.lockNavigation) return;
    const o = await this.pages[i]();
    this.stack.push(this.appendChild(o)), typeof e == "function" && e(o);
    let r = null;
    this.stack.length > 1 && !t && (r = this.stack[this.stack.length - 2], (s = r.parentElement) == null || s.removeChild(r)), this.dispatchChangeEvent(r), this.onpopstate !== null && history.pushState(null, document.title, location.href);
  }
  async dispatchChangeEvent(i) {
    this.events.dispatch("change", {
      old: i || this.stack[this.stack.length - 2] || null,
      current: this.stack[this.stack.length - 1] || null
    });
  }
};
ht = gi([
  d("ui-stack-layout")
], ht);
var vi = Object.defineProperty, bi = Object.getOwnPropertyDescriptor, Ot = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? bi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && vi(e, t, r), r;
};
let De = class extends p {
  constructor() {
    super(...arguments), this.name = "";
  }
  static get styles() {
    return f`
            :host {
                display: block;

                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;

                opacity: 0;

                transition: opacity 0.5s ease;
                animation: fade-in 0.5s;
            }

            :host(:last-child) {
                opacity: 1;
            }

            @keyframes fade-in {
                0% {
                    opacity: 0;
                }
                100% {
                    opacity: 1;
                }
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
};
Ot([
  l({ type: String, attribute: "name", reflect: !0 })
], De.prototype, "name", 2);
De = Ot([
  d("ui-stack-layout-page")
], De);
var yi = Object.defineProperty, mi = Object.getOwnPropertyDescriptor, qe = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? mi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && yi(e, t, r), r;
};
let ve = class extends p {
  constructor() {
    super(...arguments), this.data = {}, this.events = new Ve(), this.storage = !1, this.storagePrefix = "";
  }
  static get styles() {
    return f`
            :host {
                display: none;
            }
        `;
  }
  getData(i) {
    if (this.storage) {
      const e = localStorage.getItem(`${this.storagePrefix}${i}`);
      if (e !== null) return JSON.parse(e);
    }
    if (this.data.hasOwnProperty(i))
      return this.data[i];
  }
  setData(i, e, t = !1) {
    if (t && this.storage) {
      const o = localStorage.getItem(`${this.storagePrefix}${i}`);
      o !== null ? this.data[i] = JSON.parse(o) : this.data.hasOwnProperty(i) || (this.data[i] = e);
    } else
      this.data[i] = e;
    this.storage && localStorage.setItem(
      `${this.storagePrefix}${i}`,
      JSON.stringify(this.data[i])
    ), this.events.dispatch(i, this.data[i]);
  }
  updateData(i, e) {
    const t = this.getData(i);
    if (t === void 0)
      throw new Error(`"${i}" not found, use \`setData\``);
    this.setData(i, e(t));
  }
  /**
   * This function is just a wrapper for `this.events.addListener(key, data)`,
   * but with an option to trigger the callback once.
   */
  addListener(i, e, t = !1) {
    if (t) {
      const o = this.getData(i);
      o !== void 0 && setTimeout(() => e(o));
    }
    return this.events.addListener(i, e);
  }
};
qe([
  l({ type: Boolean, attribute: "storage", reflect: !0 })
], ve.prototype, "storage", 2);
qe([
  l({ type: String, attribute: "storage-prefix", reflect: !0 })
], ve.prototype, "storagePrefix", 2);
ve = qe([
  d("ui-store")
], ve);
var _i = Object.defineProperty, wi = Object.getOwnPropertyDescriptor, Ci = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? wi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && _i(e, t, r), r;
};
let ut = class extends p {
  static get styles() {
    return f`
            :host {
                display: inline-block;
                color: inherit;
            }

            ::slotted(*) {
                width: 100%;
                height: 100%;
            }
        `;
  }
  render() {
    return a` <slot></slot> `;
  }
};
ut = Ci([
  d("ui-svg")
], ut);
var xi = Object.defineProperty, $i = Object.getOwnPropertyDescriptor, F = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? $i(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && xi(e, t, r), r;
};
let k = class extends p {
  constructor() {
    super(...arguments), this.casl = 1, this.mono = 0, this.slnt = 0, this.size = "var(--ui-fontSize)", this.family = "var(--ui-fontFamily)";
  }
  static get styles() {
    return f`
            :host {
                display: inline-block;
                overflow-wrap: anywhere;

                font-size: var(--ui-text_size, var(--ui-fontSize));
                font-family: var(--ui-text_family, var(--ui-fontFamily));
                font-variation-settings:
                    "CASL" var(--ui-text_casl, 1),
                    "MONO" var(--ui-text_mono, 0),
                    "slnt" var(--ui-text_slnt, 0);
            }
        `;
  }
  render() {
    return a`<slot></slot>`;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "casl":
      case "mono":
      case "slnt":
      case "size":
      case "family":
        if (t === null) {
          this.style.removeProperty(`--ui-text_${i}`);
          return;
        }
        this.style.setProperty(`--ui-text_${i}`, t);
        break;
    }
  }
};
F([
  l({ type: Number, attribute: "casl", reflect: !0 })
], k.prototype, "casl", 2);
F([
  l({ type: Number, attribute: "mono", reflect: !0 })
], k.prototype, "mono", 2);
F([
  l({ type: Number, attribute: "slnt", reflect: !0 })
], k.prototype, "slnt", 2);
F([
  l({ type: Number, attribute: "size", reflect: !0 })
], k.prototype, "size", 2);
F([
  l({ type: Number, attribute: "family", reflect: !0 })
], k.prototype, "family", 2);
k = F([
  d("ui-text")
], k);
var ki = Object.defineProperty, Si = Object.getOwnPropertyDescriptor, Li = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Si(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ki(e, t, r), r;
};
let pt = class extends k {
  constructor() {
    super(...arguments), this.size = "0.9rem", this.casl = 1, this.mono = 0, this.slnt = -15;
  }
  render() {
    return a`${super.render()}`;
  }
};
pt = Li([
  d("ui-secondary")
], pt);
var Pi = Object.defineProperty, Oi = Object.getOwnPropertyDescriptor, Mi = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Oi(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Pi(e, t, r), r;
};
let dt = class extends k {
  constructor() {
    super(...arguments), this.size = "1.1rem", this.casl = 1, this.mono = 0, this.slnt = 0;
  }
  render() {
    return a`${super.render()}`;
  }
};
dt = Mi([
  d("ui-primary")
], dt);
var ji = Object.defineProperty, Ei = Object.getOwnPropertyDescriptor, Ce = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Ei(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && ji(e, t, r), r;
};
let te = class extends p {
  constructor() {
    super(...arguments), this.rippleCleanUp = null, this.clickHandler = async (i) => {
      if (!i.currentTarget) return;
      [...i.currentTarget.children].forEach((t) => {
        t.click();
      });
    }, this.childClickHandler = async (i) => {
      i.stopPropagation();
    }, this.ripple = !1;
  }
  static get styles() {
    return f`
            * {
                box-sizing: border-box;
            }

            ::selection {
                background-color: hsl(var(--ui-hsl-primary));
                color: hsl(var(--ui-hsl-primary-text));
            }

            :host {
                display: block;
            }

            :host > div {
                display: flex;
                flex-direction: row;

                position: relative;
                width: 100%;

                padding: var(--ui-spacing);

                border-radius: var(--ui-radius);
            }

            :host > div > span:nth-child(1) {
                flex: 1;
                display: flex;
                flex-direction: column;
                justify-content: center;

                margin-right: var(--ui-spacing);
            }

            :host > div > span:nth-child(2) {
                display: flex;
                flex-direction: row;
                justify-content: flex-end;
                align-items: center;
            }
        `;
  }
  render() {
    return a`
            <div>
                <span>
                    ${this.primary ? a`<ui-primary>${this.primary}</ui-primary>` : ""}
                    ${this.secondary ? a`<ui-secondary>${this.secondary}</ui-secondary>` : ""}
                </span>

                <span>
                    <slot></slot>
                </span>
            </div>
        `;
  }
  firstUpdated(i) {
    super.firstUpdated(i), this.ripple ? this.enableRipple() : this.disableRipple();
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "ripple":
        this.ripple ? this.enableRipple() : this.disableRipple();
    }
  }
  async enableRipple() {
    var e;
    if (this.rippleCleanUp) return;
    const i = (e = this.shadowRoot) == null ? void 0 : e.querySelector("div");
    i && (this.rippleCleanUp = ye(i), this.style.cursor = "pointer", this.addEventListener("click", this.clickHandler), [...this.children].forEach((t) => {
      t.addEventListener("click", this.childClickHandler);
    }));
  }
  async disableRipple() {
    this.rippleCleanUp && (this.rippleCleanUp(), this.rippleCleanUp = null, this.removeEventListener("click", this.clickHandler), [...this.children].forEach((i) => {
      i.removeEventListener("click", this.childClickHandler);
    }));
  }
};
Ce([
  l({ type: String, attribute: "primary", reflect: !0 })
], te.prototype, "primary", 2);
Ce([
  l({ type: String, attribute: "secondary", reflect: !0 })
], te.prototype, "secondary", 2);
Ce([
  l({ type: Boolean, attribute: "ripple", reflect: !0 })
], te.prototype, "ripple", 2);
te = Ce([
  d("ui-label")
], te);
var Ai = Object.defineProperty, Ri = Object.getOwnPropertyDescriptor, le = (i, e, t, o) => {
  for (var r = o > 1 ? void 0 : o ? Ri(e, t) : e, s = i.length - 1, n; s >= 0; s--)
    (n = i[s]) && (r = (o ? n(e, t, r) : n(r)) || r);
  return o && r && Ai(e, t, r), r;
};
const ft = "gruvbox";
let N = class extends p {
  constructor() {
    super(...arguments), this.auto = !1, this.mode = null, this.theme = ft, this.themesPath = "/themes", this.media = null;
  }
  get target() {
    return document.body;
  }
  get mediaHandler() {
    return (i) => {
      i.matches ? this.target.setAttribute("data-theme", "dark") : this.target.setAttribute("data-theme", "light");
    };
  }
  static get styles() {
    return f`
            :host {
                display: none;
            }
        `;
  }
  attributeChangedCallback(i, e, t) {
    switch (super.attributeChangedCallback(i, e, t), i) {
      case "auto":
        this.handleAuto();
        break;
      case "mode":
        this.handleMode();
        break;
      case "theme":
        this.handleTheme();
        break;
    }
  }
  handleAuto() {
    if (!this.auto) {
      if (console.debug("[ui][ui-theme-handler] Disable auto mode"), !this.media) return;
      this.media.removeEventListener("change", this.mediaHandler), this.media = null;
      return;
    }
    if (this.mode = null, console.debug("[ui][ui-theme-handler] Enable auto mode"), this.media) {
      this.mediaHandler(this.media);
      return;
    }
    this.media = window.matchMedia("(prefers-color-scheme: dark)"), this.media.addEventListener("change", this.mediaHandler), this.mediaHandler(this.media);
  }
  handleMode() {
    console.debug(`[ui][ui-theme-handler] Set mode ${this.mode}`), this.mode ? this.target.setAttribute("data-theme", this.mode) : this.target.removeAttribute("data-theme");
  }
  handleTheme() {
    const i = document.head;
    console.debug(`[ui][ui-theme-handler] Load theme from "${this.themesPath}/${this.theme}"`), i.querySelectorAll("link.theme").forEach((t) => {
      i.removeChild(t);
    });
    const e = document.createElement("link");
    e.classList.add("theme"), e.rel = "stylesheet", e.href = `${this.themesPath}/${this.theme || ft}.css`, i.appendChild(e);
  }
};
le([
  l({ type: Boolean, attribute: "auto", reflect: !0 })
], N.prototype, "auto", 2);
le([
  l({ type: String, attribute: "mode", reflect: !0 })
], N.prototype, "mode", 2);
le([
  l({ type: String, attribute: "theme", reflect: !0 })
], N.prototype, "theme", 2);
le([
  l({ type: String, attribute: "themes-path", reflect: !0 })
], N.prototype, "themesPath", 2);
N = le([
  d("ui-theme-handler")
], N);
export {
  Ui as CleanUp,
  Ve as Events,
  ue as UIAlert,
  st as UIAlerts,
  pe as UIAppBar,
  je as UIAppBarItem,
  D as UIButton,
  Ee as UICheck,
  Q as UIDialog,
  de as UIDrawer,
  T as UIDrawerGroup,
  nt as UIDrawerGroupItem,
  I as UIFlexGrid,
  fe as UIFlexGridItem,
  Z as UIFlexGridRow,
  G as UIIconButton,
  $ as UIInput,
  te as UILabel,
  Ae as UILang,
  ee as UILangType,
  dt as UIPrimary,
  C as UISearch,
  pt as UISecondary,
  ge as UISelect,
  z as UISelectOption,
  Re as UISpinner,
  ht as UIStackLayout,
  De as UIStackLayoutPage,
  ve as UIStore,
  ut as UISvg,
  k as UIText,
  M as UITextarea,
  N as UIThemeHandler,
  f as css,
  Gi as draggable,
  Vi as globalStylesToShadowRoot,
  a as html,
  Zi as isAndroid,
  Ti as ripple,
  Ii as styles,
  zi as svg
};
