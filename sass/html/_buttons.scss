@use "../theme-variables" as *;
@use "../utils";

@mixin button-styles($color, $variant) {
    display: inline-flex;
    cursor: pointer;

    padding: $spacing calc($spacing * 2.5);
    align-items: center;
    justify-content: center;
    text-transform: capitalize;
    font-size: 1.1rem;
    overflow: hidden;
    transition: background-color $transition;

    border: $border-width $border-style $border-color;
    border-radius: $radius;

    @include utils.none-select();

    // NOTE: Primary color with variant full will be the default
    //       in version v2.0.0

    @if $variant == outline {
        border-color: currentColor;
    } @else {
        border-color: transparent;
    }

    @if $color == secondary {
        @if $variant == outline or $variant == ghost {
            background-color: transparent;
            color: $secondary;
        } @else {
            background-color: $secondary;
            color: $secondary-text;

            &:hover {
                background-color: $secondary--hover;
            }

            &:active {
                transition: none;
                background-color: $secondary--active;
            }
        }
    } @else if $color == destructive {
        @if $variant == outline or $variant == ghost {
            background-color: transparent;
            color: $destructive;
        } @else {
            background-color: $destructive;
            color: $destructive-text;

            &:hover {
                background-color: $destructive--hover;
            }

            &:active {
                transition: none;
                background-color: $destructive--active;
            }
        }
    } @else {
        background-color: $primary;
        color: $primary-text;

        @if $variant == outline or $variant == ghost {
            background-color: transparent;
            color: $primary;
        } @else {
            &:hover {
                background-color: $primary--hover;
            }

            &:active {
                transition: none;
                background-color: $primary--active;
            }
        }
    }
}

@mixin button() {
    @include button-styles("primary", "full");

    &[variant="outline"] {
        @include button-styles("primary", "outline");
    }

    &[variant="ghost"] {
        @include button-styles("primary", "ghost");
    }

    &[color="secondary"] {
        @include button-styles("secondary", "full");

        &[variant="outline"] {
            @include button-styles("secondary", "outline");
        }

        &[variant="ghost"] {
            @include button-styles("secondary", "ghost");
        }
    }

    &[color="destructive"] {
        @include button-styles("destructive", "full");

        &[variant="outline"] {
            @include button-styles("destructive", "outline");
        }

        &[variant="ghost"] {
            @include button-styles("destructive", "ghost");
        }
    }
}

button,
button:has(> svg) {
    @include button();
}

button:has(> svg) {
    padding: calc($spacing / 2);

    width: 2.5rem;
    height: 2.5rem;
}

button > svg {
    width: 100%;
    height: 100%;
}
