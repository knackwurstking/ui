/* Card Component */

.card {
    display: block;
    background-color: var(--ui-bg);
    border: var(--ui-border-width) var(--ui-border-style) var(--ui-border-color);
    border-radius: var(--ui-radius);
    overflow: hidden;
    transition:
        transform 0.2s ease-in-out,
        box-shadow 0.2s ease-in-out,
        border-color 0.2s ease-in-out;
    position: relative;
}

.card:hover {
    box-shadow:
        0 4px 12px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.1),
        0 2px 4px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.06);
}

.card:focus-within {
    border-color: var(--ui-primary);
    outline: 2px solid var(--ui-primary);
    outline-offset: 2px;
}

/* Card variants */
.card.elevated {
    border: none;
    box-shadow:
        0 2px 8px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.08),
        0 1px 2px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.04);
}

.card.elevated:hover {
    box-shadow:
        0 8px 24px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.12),
        0 4px 8px hsla(var(--ui-hue), var(--ui-saturation), 20%, 0.08);
}

.card.flat {
    border: none;
    box-shadow: none;
    background-color: var(--ui-muted);
}

.card.flat:hover {
    background-color: var(--ui-color-200);
}

.card.outlined {
    background-color: transparent;
    border-width: calc(var(--ui-border-width) * 1.5);
}

.card.outlined:hover {
    border-color: var(--ui-primary);
    background-color: var(--ui-color-50);
}

/* Interactive card */
.card.interactive {
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

.card.interactive:active {
    transition: transform 0.1s ease-in-out;
}

.card.interactive:focus {
    outline: 2px solid var(--ui-primary);
    outline-offset: 2px;
}

/* Card sizes */
.card.compact {
    --card-padding: calc(var(--ui-spacing) * 1);
}

.card.comfortable {
    --card-padding: calc(var(--ui-spacing) * 1.5);
}

.card.spacious {
    --card-padding: calc(var(--ui-spacing) * 2);
}

/* Card structure */
.card-header {
    padding: var(--card-padding, calc(var(--ui-spacing) * 1.5));
    border-bottom: var(--ui-border-width) var(--ui-border-style)
        var(--ui-border-color);
    background-color: var(--ui-color-50);
}

.card-body {
    padding: var(--card-padding, calc(var(--ui-spacing) * 1.5));
}

.card-footer {
    padding: var(--card-padding, calc(var(--ui-spacing) * 1.5));
    border-top: var(--ui-border-width) var(--ui-border-style)
        var(--ui-border-color);
    background-color: var(--ui-color-50);
}

/* Remove borders for seamless sections */
.card.seamless .card-header,
.card.seamless .card-footer {
    border: none;
    background-color: transparent;
}

/* Card image */
.card-image {
    width: 100%;
    height: auto;
    display: block;
    object-fit: cover;
}

.card-image.aspect-video {
    aspect-ratio: 16 / 9;
}

.card-image.aspect-square {
    aspect-ratio: 1 / 1;
}

.card-image.aspect-portrait {
    aspect-ratio: 3 / 4;
}

/* Card content helpers */
.card-title {
    margin: 0 0 calc(var(--ui-spacing) / 2) 0;
    font-size: 1.25rem;
    font-weight: 600;
    line-height: 1.3;
    color: var(--ui-text);
}

.card-subtitle {
    margin: 0 0 var(--ui-spacing) 0;
    font-size: 0.875rem;
    color: var(--ui-muted-text);
    line-height: 1.4;
}

.card-description {
    margin: 0 0 var(--ui-spacing) 0;
    color: var(--ui-text);
    line-height: 1.5;
}

.card-meta {
    font-size: 0.75rem;
    color: var(--ui-muted-text);
    margin: 0;
}

/* Card actions */
.card-actions {
    display: flex;
    gap: calc(var(--ui-spacing) / 2);
    align-items: center;
    justify-content: flex-start;
    flex-wrap: wrap;
}

.card-actions.center {
    justify-content: center;
}

.card-actions.end {
    justify-content: flex-end;
}

.card-actions.between {
    justify-content: space-between;
}

.card-actions.stretch {
    justify-content: stretch;
}

.card-actions.stretch > * {
    flex: 1;
}

/* Special card layouts */
.card.horizontal {
    display: flex;
    flex-direction: row;
    align-items: stretch;
}

.card.horizontal .card-image {
    width: auto;
    min-width: 120px;
    max-width: 200px;
    flex-shrink: 0;
}

.card.horizontal .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
}

.card.horizontal .card-body {
    flex: 1;
}

/* Media card variant */
.card.media {
    overflow: hidden;
}

.card.media .card-image {
    transition: transform 0.3s ease-in-out;
}

.card.media:hover .card-image {
    transform: scale(1.05);
}

/* Card group/grid utilities */
.card-grid {
    display: grid;
    gap: var(--ui-spacing);
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
}

.card-grid.compact {
    grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
}

.card-grid.wide {
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
}

/* Responsive adjustments */
@media (max-width: 640px) {
    .card.horizontal {
        flex-direction: column;
    }

    .card.horizontal .card-image {
        width: 100%;
        min-width: auto;
        max-width: none;
    }

    .card-grid {
        grid-template-columns: 1fr;
    }
}

/* Color variants */
.card.primary {
    border-color: var(--ui-primary);
}

.card.primary .card-header {
    background-color: var(--ui-primary);
    color: var(--ui-primary-text);
    border-color: var(--ui-primary);
}

.card.outlined.primary .card-header {
    color: var(--ui-primary);
}

.card.primary:hover {
    border-color: var(--ui-primary--hover);
}

.card.secondary {
    border-color: var(--ui-secondary);
}

.card.secondary .card-header {
    background-color: var(--ui-secondary);
    color: var(--ui-secondary-text);
    border-color: var(--ui-secondary);
}

.card.outlined.secondary .card-header {
    color: var(--ui-secondary);
}

.card.secondary:hover {
    border-color: var(--ui-secondary--hover);
}

.card.info {
    border-color: var(--ui-info);
}

.card.info .card-header {
    background-color: var(--ui-info);
    color: var(--ui-info-text);
    border-color: var(--ui-info);
}

.card.outlined.info .card-header {
    color: var(--ui-info);
}

.card.info:hover {
    border-color: var(--ui-info--hover);
}

.card.success {
    border-color: var(--ui-success);
}

.card.success .card-header {
    background-color: var(--ui-success);
    color: var(--ui-success-text);
    border-color: var(--ui-success);
}

.card.outlined.success .card-header {
    color: var(--ui-success);
}

.card.success:hover {
    border-color: var(--ui-success--hover);
}

.card.warning {
    border-color: var(--ui-warning);
}

.card.warning .card-header {
    background-color: var(--ui-warning);
    color: var(--ui-warning-text);
    border-color: var(--ui-warning);
}

.card.outlined.warning .card-header {
    color: var(--ui-warning);
}

.card.warning:hover {
    border-color: var(--ui-warning--hover);
}

.card.destructive {
    border-color: var(--ui-destructive);
}

.card.destructive .card-header {
    background-color: var(--ui-destructive);
    color: var(--ui-destructive-text);
    border-color: var(--ui-destructive);
}

.card.outlined.destructive .card-header {
    color: var(--ui-destructive);
}

.card.destructive:hover {
    border-color: var(--ui-destructive--hover);
}

.card.contrast {
    border-color: var(--ui-contrast);
}

.card.contrast .card-header {
    background-color: var(--ui-contrast);
    color: var(--ui-contrast-text);
    border-color: var(--ui-contrast);
}

.card.outlined.contrast .card-header {
    color: var(--ui-contrast);
}

.card.contrast:hover {
    border-color: var(--ui-contrast--hover);
}

.card.muted {
    border-color: var(--ui-muted);
}

.card.muted .card-header {
    background-color: var(--ui-muted);
    color: var(--ui-muted-text);
    border-color: var(--ui-muted);
}

.card.outlined.muted .card-header {
    color: var(--ui-muted);
}

.card.muted:hover {
    border-color: var(--ui-color-300);
}

.card.error {
    border-color: var(--ui-error);
}

.card.error .card-header {
    background-color: var(--ui-error);
    color: var(--ui-error-text);
    border-color: var(--ui-error);
}

.card.outlined.error .card-header {
    color: var(--ui-error);
}

.card.error:hover {
    border-color: var(--ui-destructive--hover);
}

/* Override for all outlined cards - must come after color variants */
.card.outlined .card-header {
    background-color: transparent;
    border-color: transparent;
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
    .card,
    .card.media .card-image {
        transition: none;
    }
}

/* High contrast mode */
@media (prefers-contrast: high) {
    .card {
        border-width: calc(var(--ui-border-width) * 2);
    }

    .card:focus-within {
        outline-width: 3px;
        outline-offset: 3px;
    }
}
